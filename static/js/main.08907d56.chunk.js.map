{"version":3,"sources":["components/ParsingOptions/ParsingOptions.module.scss","components/DataLoader/loaders/LoadProject.module.scss","components/DataLoader/loaders/UploadFile.module.scss","components/ChartSelector/ChartSelector.module.scss","components/InlineColorPicker/InlineColorPicker.module.scss","components/DataLoader/loaders/SparqlFetch.module.scss","components/ChartOptions/ChartOptions.module.scss","components/Header/Header.module.scss","components/Section/Section.module.scss","components/Footer/Footer.module.scss","components/DataMapping/DataMapping.module.scss","components/DataGrid/DataGrid.module.scss","components/DataSamples/DataSamples.module.scss","components/DataLoader/loaders/UrlFetch.module.scss","components/DataLoader/DataLoader.module.scss","HeaderItems.js","components/Header/Header.js","components/Section/Section.js","components/Footer/Footer.js","components/ScreenSizeAlert/ScreenSizeAlert.js","worker/index.js","hooks/useWindowSize.js","constants.js","worker/worker.js","hooks/useDataLoaderUtils/parser.js","hooks/useDataLoaderUtils/stack.js","hooks/useDataLoader.js","components/DataGrid/DataGrid.js","components/DataSamples/DataSamples.js","components/JsonViewer/JsonViewer.js","components/ParsingOptions/SeparatorSelector.js","components/ParsingOptions/ThousandsSeparatorSelector.js","components/ParsingOptions/DecimalsSeparatorSelector.js","components/ParsingOptions/DateLocaleSelector.js","components/ParsingOptions/StackSelector.js","components/DataLoader/loaders/UrlFetch.js","components/DataLoader/loaders/SparqlFetch.js","components/ParsingOptions/ParsingOptions.js","charts.js","components/DataLoader/loaders/LoadProject.js","components/DataLoader/loaders/Paste.js","components/DataLoader/loaders/UploadFile.js","components/DataLoader/loading.js","components/WarningMessage/WarningMessage.js","components/DataLoader/DataMismatchModal.js","components/DataLoader/DataLoader.js","components/ChartSelector/ChartSelector.js","components/DataMapping/ColumnCard.js","components/DataMapping/DataTypeIcon.js","components/DataMapping/asterisk.svg","components/DataMapping/RequiredIcon.js","components/DataMapping/ChartDimensionItem.js","components/DataMapping/ChartDimensionCard.js","components/DataMapping/DataMapping.js","components/ChartOptions/ChartOptionTypes/ChartOptionSelect.js","components/ChartOptions/ChartOptionTypes/ChartOptionNumber.js","components/ChartOptions/ChartOptionTypes/ChartOptionText.js","components/InlineColorPicker/InlineColorPicker.js","components/ChartOptions/ChartOptionTypes/ChartOptionColor.js","components/ChartOptions/ChartOptionTypes/ColorSchemePreview.js","components/ChartOptions/ChartOptionTypes/ColorSchemesDropDown.js","components/ChartOptions/ChartOptionTypes/ColorScaleUtils.js","hooks/usePrevious.js","components/ChartOptions/ChartOptionTypes/ChartOptionColorScale.js","components/ChartOptions/ChartOptionTypes/ChartOptionColorScaleDefault.js","components/ChartOptions/ChartOptionTypes/ChartOptionColorScaleWrapper.js","components/ChartOptions/ChartOptionTypes/ChartOptionBoolean.js","components/ChartOptions/ChartOptions.js","gaEvents.js","components/ChartPreview/ChartPreview.js","hooks/useDebounce.js","components/ChartPreviewWIthOptions/ChartPreviewWithOptions.js","components/Exporter/Exporter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","headerItems","label","slug","href","Header","menuItems","Navbar","bg","expand","sticky","className","styles","navbar","Brand","Toggle","aria-controls","Collapse","id","Nav","map","d","i","Link","key","role","target","rel","Section","props","Container","fluid","section","join","Row","Col","title","loading","Spinner","animation","variant","style","width","height","borderWidth","marginLeft","children","Footer","backgroundColor","footer","xs","sm","span","order","lg","offset","md","xl","ScreenSizeAlert","parsingWorker","mappingWorker","size","useState","undefined","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","showModal","setShowModal","modalWasClosed","setModalWasClosed","handleClose","Modal","show","onHide","backdrop","keyboard","aria-labelledby","centered","closeButton","Title","as","aria-label","Body","Button","onClick","DateIcon","BsClock","NumberIcon","BsHash","StringIcon","BsType","dataTypeIcons","date","number","string","localeList","arEG","caES","csCZ","daDK","deCH","deDE","enCA","enGB","enUS","esES","esMX","faIR","fiFI","frCA","frFR","heIL","huHU","itIT","jaJP","koKR","mkMK","nbNO","nlNL","plPL","ptBR","ruRU","svSE","ukUA","zhCN","zhTW","separatorsLabels","separatorsList","Object","keys","AGGREGATIONS_LABELS","SCALES_LABELS","COLOR_SCHEMES_LABELS","Worker","SparqlMarker","Symbol","PARSERS","dataType","parse","data","opts","Error","dataString","trimmedDataString","trim","replace","JSON","separator","dsvFormat","candidates","parsed","length","push","score","e","sort","a","b","parseAndCheckData","parser","extra","parseData","isScalarType","item","includes","stackData","column","flatMap","record","others","omit","value","prop","DATA_LOADER_MODE","__cache","useDataLoader","userInput","setUserInput","dataSource","setDataSource","userData","setUserData","userDataType","setUserDataType","parseError","setParserError","unstackedInfo","setUnstackedInfo","setSeparator","thousandsSeparator","setThousandsSeparator","decimalsSeparator","setDecimalsSeparator","navigator","language","locale","setLocale","stackDimension","setStackDimension","setData","unstackedData","unstackedColumns","setLoading","mode","setMode","replaceRequiresConfirmation","setReplaceRequiresConfirmation","columnsTypes","dataTypes","parseDatasetAsyncAndSetData","useCallback","parsingOptions","terminate","err","Comlink","parseDataset","parseDatasetInWorker","dateLocale","get","then","resultData","catch","console","log","finally","parseDatasetSyncAndSetData","Promise","resolve","reject","parseDatasetAuto","parseDatasetAndSetData","reset","hydrateFromSavedProject","project","handleReplacingData","decimal","group","newDataInferred","errors","replacedData","oldColNames","newColNames","missingCols","difference","nextDataTypes","newData","stackedData","handleNewUserData","nextUserData","error","setUserDataAndDetect","str","source","options","parsedUserData","jsonPath","jsonData","Array","isArray","setJsonData","path","normalized","element","iterateElement","tmp","forEach","outElement","property","valueType","filter","nestedProperty","nestedValue","startDataReplace","cancelDataReplace","commitDataReplace","newSeparator","newThousandsSeparator","newDecimalSeparator","newLocale","dataset","coerceTypes","nextTypes","loadSample","rawData","sampleSeparator","type","handleInlineEdit","newDataset","handleStackOperation","resetDataLoader","dataLoaderMode","DATE_FORMATS","dateFormats","DateFormatSelector","React","forwardRef","ref","currentFormat","onChange","classNames","S","dateFmt","selected","stopPropagation","preventDefault","dateFormat","DataTypeSelector","typeDescriptor","currentType","onTypeChange","currentTypeComplete","dataTypeIconDomRef","useRef","showPicker","setShowPicker","handleTypeChange","newType","datatype","isEqual","handleTypeChangeDate","handleTargetClick","Icon","Overlay","current","placement","rootClose","rootCloseEvent","container","document","body","scheduleUpdate","arrowProps","outOfBoundaries","data-datatype","OverlayTrigger","overlay","trigger","triggerHandler","marginRight","fill","HeaderRenderer","sortColumn","sortDirection","_raw_datatype","_raw_coerceType","name","DataGrid","userDataset","onDataUpdate","setSort","keyedErrors","useMemo","keyBy","containerEl","idColumnWidth","Math","floor","log10","equalDinstribution","getBoundingClientRect","columnWidth","max","columns","headerRenderer","frozen","sortable","k","editable","formatter","row","_errors","toString","nextType","resizable","sortedDataset","datasetWithIds","_id","_stage3","sortColumnType","getTypeName","valueOf","localeCompare","reverse","handleSort","columnKey","direction","minColumnWidth","rows","rowHeight","onSort","onColumnResize","onRowsUpdate","update","action","fromRow","cellKey","updated","samplesList","category","url","delimiter","sourceName","sourceURL","DataSamples","onSampleReady","setLoadingError","select","sample","fetch","response","message","text","marginBottom","Card","JsonViewerRecursive","contextName","nestingLevel","context","selectFilter","onSelect","isSelectable","contextType","mouseOver","setMouseOver","classes","handleSelect","handleMouseOver","handleMouseOut","onMouseOver","onMouseOut","JsonViewer","SeparatorSelector","inputValue","handleChange","nextValue","formatValue","Dropdown","Menu","Item","ThousandsSeparatorSelector","DecimalsSeparatorSelector","DateLocaleSelector","StackSelector","list","nextDimension","disabled","fetchData","UrlFetch","setUrl","fetchUrl","DEFAULT_PREFIXES","wd","wds","wdv","wdt","wikibase","p","ps","pq","rdfs","bd","wdref","psv","psn","pqv","pqn","pr","prv","prn","wdno","wdata","schema","rdf","owl","skos","xsd","prov","bds","gas","hint","sparqlGenerator","Generator","client","SimpleClient","endpointUrl","query","stringify","json","results","bindingsToJson","head","vars","bindings","SparqlFetch","parsedQuery","setParsedQuery","editorDomRef","onQueryParsed","evt","detail","queryType","onParserFailure","onSubmit","result","node","render","html","varNames","binding","variable","term","dataRefreshWorkers","fetchDataFromUrl","fetchDataFromSparql","dataRefreshCaptions","ParsingOptions","refreshData","dataRefreshImpl","onDataRefreshed","nextSeparator","nextLocale","color","dimensions","nextStackDimension","charts","alluvialdiagram","arcdiagram","barchart","barchartmultiset","barchartstacked","beeswarm","boxplot","bubblechart","bumpchart","circlepacking","circularDendrogram","contourPlot","convexHull","dendrogram","ganttChart","hexagonalBinning","horizongraph","linechart","matrixplot","parallelcoordinates","piechart","radarchart","sankeydiagram","slopechart","streamgraph","sunburst","treemap","violinplot","voronoidiagram","LoadProject","onProjectSelected","onDrop","acceptedFiles","reader","FileReader","deserializeProject","readAsText","useDropzone","accept","maxFiles","getRootProps","getInputProps","isDragReject","isDragAccept","dropzone","Paste","border","borderRadius","padding","minHeight","UploadFile","Loading","WarningMessage","Alert","DataMismatchModal","startsWith","split","memo","mainContent","hydrateFromProject","loadingError","loader","rawInput","icon","BsClipboard","allowedForReplace","BsUpload","BsGift","BsCloud","BsSearch","BsFolder","optionIndex","setOptionIndex","selectedOption","ctx","reloadRAW","location","pathname","opt","classnames","active","c","successRows","parsingErrors","filterCharts","metadata","categories","indexOf","availableCharts","currentChart","setCurrentChart","setFilter","handleFilterChange","nextFilter","nextCharts","charAt","toUpperCase","slice","uniq","flat","Img","src","thumbnail","Subtitle","Text","description","code","tutorial","backgroundImage","whiteSpace","ColumnCard","dimensionName","dimensionType","commitLocalMapping","rollbackLocalMapping","useDrag","collect","monitor","isDragging","end","dropResult","didDrop","drag","dimType","DataTypeIcon","Tooltip","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","_ref","svgRef","viewBox","ForwardRef","RequiredIcon","ChartDimensionItem","draggingColumn","index","isValid","columnId","dimension","aggregators","relatedAggregation","onMove","onChangeAggregation","onDeleteItem","onChangeDimension","replaceDimension","onInsertColumn","localMappding","useDrop","isOver","getItem","hover","multiple","hoverIndex","dimensionId","dragIndex","hoverBoundingRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","opacity","aggregation","aggregatorName","getAggregatorNames","emptyList","ChartDimensionCard","mapping","setMapping","draggingId","setDraggingId","defaulAggregation","getDefaultDimensionAggregation","columnDataType","validTypes","ids","concat","uniqueId","mappedType","config","setAggregation","newAggregations","idsMappedHere","columnsMappedHere","aggregationsMappedHere","nextConfig","col","j","newCol","arrayMove","nextId","arrayInsert","t","required","renderId","removeIndex","arrayReplace","arr","handleReplaceLocalMapping","prev","fromDimension","toDimension","fromIndex","toIndex","removedItem","newAggregation","moveFn","prevToMapping","toDimensionMapping","obj","setLocalMapping","updateMapping","mappingConf","isLocal","lastMapping","useImperativeHandle","clearLocalMapping","DndProvider","backend","HTML5Backend","columnName","defaultValue","default","stringValue","Number","option","isObject","isEnabled","step","min","n","parseFloat","isNaN","placeholder","InlineColorPicker","maybeColor","displayColorPicker","setDisplayColorPicker","swatch","background","popover","cover","disableAlpha","onChangeComplete","hex","samples","scale","numSamples","ticks","domain","flex","interpolators","interpolator","setInterpolator","colorDataset","colorDataType","scaleType","currentFinalScale","paddingRight","intrplr","colorPresets","getPresetScale","getColorDomain","ResetBtn","resetScale","InvertBtn","invertScale","LockBtn","handleChangeLocked","locked","usePrevious","getDatePickerValue","userValue","userDomain","getValueType","toISOString","substring","ChartOptionColorScale","mappingValue","chart","mappedData","hasAnyMapping","initialValue","__loaded","setScaleType","defaultColor","colorFromDefault","setLocked","availableScaleTypes","getAvailableScaleTypes","setInterpolators","userRange","range","userValues","setUserValues","getCurrentFinalScale","userValuesForFinalScale","x","getColorScale","getDefaultUserValues","getInitialScaleValues","getUserValuesForFinalScale","values","currentUserValues","valuesForFinalScale","getDefaultColorScale","handleChangeValues","nextUserValues","userScaleValues","setUserValueRange","newUserValues","setUserValueDomain","handleChangeScaleType","nextScaleType","nextInterpolators","nextInterpolator","handleSetInterpolator","customUserValues","byDomain","v","nextLocked","reversedValues","invertedValues","prevMappingValue","marginTop","s","Date","ChartOptionColorScaleDefault","colorFromValue","setDefaultColor","handleChangeDefaultColor","nextDefaultColor","outScaleParams","ChartOptionColorScaleWrapper","optionId","Form","Check","checked","CHART_OPTION_COMPONENTS","ChartOptionNumber","ChartOptionText","ChartOptionColor","colorScale","boolean","ChartOptionBoolean","getPartialMapping","repeatIndex","nv","getPartialMappedData","datum","getDefaultForRepeat","def","repeatDefault","WrapControlComponent","setVisualOptions","Component","remainingOptions","visualOptions","domainFromChart","handleControlChange","newValue","Fragment","ChartOptions","optionsConfig","getOptionsConfig","groups","collapseStatus","setCollapseStatus","enabledOptions","getEnabledOptions","optionsDefinitionsByGroup","reduce","acc","containerOptions","defaultOptionsValues","getDefaultOptionsValues","getContainerOptions","groupName","groupname","repeatFor","showLegend","prevChartIdRendered","setError","setRawViz","domRef","vizOptionsDebounced","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","currentlyMapped","requiredVariables","errorMessage","curr","firstChild","removeChild","multivaluesVariables","minValues","chartMetadata","variableObj","find","viz","rawChart","rawViz","renderToDOM","gtag","event_category","ChartPreviewWithOptions","setMappingLoading","setMappedData","chartName","mapData","mapDataInWorker","downloadBlob","filename","download","click","Exporter","exportProject","downloadSvg","svgString","XMLSerializer","serializeToString","_node","DOMURL","URL","webkitURL","svg","Blob","createObjectURL","revokeObjectURL","downloadImage","format","canvas","clientHeight","clientWidth","getContext","img","Image","onload","drawImage","toDataURL","downloadProject","blob","setCurrentFormat","currentFile","setCurrentFile","downloadViz","_chartImplementation","event_label","InputGroup","DropdownButton","Append","App","dataLoader","mappingLoading","dataMappingRef","columnNames","prevColumnNames","handleChartChange","nextChart","serializeProject","importProject","patchedOptions","isPlainObject","HeaderItems","buttonText","buttonStyle","fontSize","buttonClasses","acceptOnScroll","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.08907d56.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"parsingOptions\":\"ParsingOptions_parsingOptions__K4kyV\",\"refresh-button\":\"ParsingOptions_refresh-button__3TkLa\",\"separator-preview\":\"ParsingOptions_separator-preview__1UuQv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropzone\":\"LoadProject_dropzone__6a5Ft\",\"reject\":\"LoadProject_reject__1NjN5\",\"accept\":\"LoadProject_accept__1a3qM\",\"browse-button\":\"LoadProject_browse-button__Kvg8t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropzone\":\"UploadFile_dropzone__1h-vB\",\"reject\":\"UploadFile_reject__2Kpgt\",\"accept\":\"UploadFile_accept__3mK1X\",\"browse-button\":\"UploadFile_browse-button__2AUZ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"thumbnail\":\"ChartSelector_thumbnail__1xQ_-\",\"currentChart\":\"ChartSelector_currentChart__NKILM\",\"disabled\":\"ChartSelector_disabled__MRXKu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"swatch\":\"InlineColorPicker_swatch__11WDP\",\"color\":\"InlineColorPicker_color__12j-E\",\"popover\":\"InlineColorPicker_popover__3Hchl\",\"cover\":\"InlineColorPicker_cover__2KTIs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"url-input\":\"SparqlFetch_url-input__1OTEr\",\"query-input-here\":\"SparqlFetch_query-input-here__1GTNa\",\"base-iri-input-here\":\"SparqlFetch_base-iri-input-here__1MbOa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart-options\":\"ChartOptions_chart-options__3l80N\",\"chart-option\":\"ChartOptions_chart-option__AxfdW\",\"color-swatch\":\"ChartOptions_color-swatch__2yOSf\",\"color-scale-item\":\"ChartOptions_color-scale-item__3Rhfd\",\"ordinal\":\"ChartOptions_ordinal__2mFUI\",\"not-ordinal\":\"ChartOptions_not-ordinal__3DrFs\",\"color-swatches-list\":\"ChartOptions_color-swatches-list__2EQnZ\",\"options-group\":\"ChartOptions_options-group__3Zauh\",\"group-header\":\"ChartOptions_group-header__1X0bJ\",\"collapsed\":\"ChartOptions_collapsed__pl7d6\",\"collapse-button\":\"ChartOptions_collapse-button__rUqFX\",\"color-scheme-dropdown-item\":\"ChartOptions_color-scheme-dropdown-item__1zRUD\",\"scheme-preview\":\"ChartOptions_scheme-preview__f1lz2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Header_navbar__359Kr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2mYr1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__7dIj9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column-card\":\"DataMapping_column-card__2VBWp\",\"column-title\":\"DataMapping_column-title__2yLXi\",\"data-type-icon\":\"DataMapping_data-type-icon__fdfcN\",\"chart-dimension\":\"DataMapping_chart-dimension__2tNga\",\"chart-dimension-header\":\"DataMapping_chart-dimension-header__3FrwJ\",\"accepted-type-icon\":\"DataMapping_accepted-type-icon__3XRr1\",\"dimension-required\":\"DataMapping_dimension-required__1FreW\",\"assigned-column\":\"DataMapping_assigned-column__3S8Vu\",\"column-valid\":\"DataMapping_column-valid__1wlKa\",\"column-invalid\":\"DataMapping_column-invalid__3g-BT\",\"remove-assigned\":\"DataMapping_remove-assigned__3VE_f\",\"dropzone\":\"DataMapping_dropzone__2L06t\",\"active\":\"DataMapping_active__NdQHM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"data-type-selector\":\"DataGrid_data-type-selector__2on-B\",\"data-type-selector-item\":\"DataGrid_data-type-selector-item__3xB1K\",\"selected\":\"DataGrid_selected__iVbJn\",\"date-format-preview\":\"DataGrid_date-format-preview__f5V3s\",\"data-type-selector-trigger\":\"DataGrid_data-type-selector-trigger__1yAyi\",\"date-format-selector\":\"DataGrid_date-format-selector__19SHO\",\"date-format-selector-entry\":\"DataGrid_date-format-selector-entry__3kPs-\",\"parent-type-selector\":\"DataGrid_parent-type-selector__8RCk2\",\"column-name\":\"DataGrid_column-name__q_QPq\",\"has-error\":\"DataGrid_has-error__jgPR1\",\"raw-col-header\":\"DataGrid_raw-col-header__2fXsy\",\"unsorted\":\"DataGrid_unsorted__2dx3u\",\"acs\":\"DataGrid_acs__-kgxx\",\"desc\":\"DataGrid_desc__2WpaO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dataset-source\":\"DataSamples_dataset-source__1NwGz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"url-input\":\"UrlFetch_url-input__3vKK2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-option\":\"DataLoader_loading-option__Spa1h\",\"disabled\":\"DataLoader_disabled__3RVvn\",\"active\":\"DataLoader_active__-mHU8\",\"start-over\":\"DataLoader_start-over__3fWNA\",\"cancel\":\"DataLoader_cancel__22q8c\",\"loading-component\":\"DataLoader_loading-component__1zOap\",\"bg-animated\":\"DataLoader_bg-animated__1j4Qa\",\"bg-animation\":\"DataLoader_bg-animation__12elS\"};","const headerItems = [\n  {\n    label: 'About',\n    slug: 'about',\n    href: 'https://rawgraphs.io/about',\n  },\n  // {\n  //   label: 'Gallery',\n  //   slug: 'gallery',\n  //   href: 'https://rawgraphs.io/gallery',\n  // },\n  {\n    label: 'Learning',\n    slug: 'learning',\n    href: 'https://rawgraphs.io/learning',\n  },\n  // {\n  //   label: 'FAQs',\n  //   slug: 'faqs',\n  //   href: 'https://github.com/rawgraphs/raw/wiki/FAQs',\n  // },\n  // {\n  //   label: \"RAWGraphs 1.3\",\n  //   slug: 'rawgraphs-1-3',\n  //   href: 'https://app.rawgraphs.io',\n  // },\n  {\n    label: 'GitHub',\n    slug: 'github',\n    href: 'https://github.com/rawgraphs/rawgraphs-app',\n  },\n]\n\nexport default headerItems\n","import React from 'react'\nimport styles from './Header.module.scss'\nimport { Navbar, Nav } from 'react-bootstrap'\n\nexport default function Header({ menuItems }) {\n  return (\n    <Navbar bg=\"white\" expand=\"lg\" sticky=\"top\" className={styles.navbar}>\n      <Navbar.Brand href=\"/\"><b>RAW</b><span className=\"text-primary\">Graphs</span> 2.0 beta</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          {menuItems.map((d, i) => {\n            return (\n              <Nav.Link key={'item' + i} href={d.href}>\n                {d.label}\n              </Nav.Link>\n            )\n          })}\n          <a\n            role=\"button\"\n            href=\"https://github.com/rawgraphs/rawgraphs-app/issues\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"btn btn-sm btn-primary ml-2 d-flex flex-column align-items-center justify-content-center\"\n          >\n            Report issue\n          </a>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\n","import React from 'react'\nimport styles from './Section.module.scss'\nimport { Container, Row, Col, Spinner } from 'react-bootstrap'\n\nexport default function Section(props) {\n  return (\n    <Container\n      fluid\n      className={\n        [styles.section, props.className].join(' ')\n      }\n    >\n      <Row>\n        <Col>\n          <div className=\"d-flex align-items-center mb-3\">\n            <h1>{props.title}</h1>\n            { props.loading && <Spinner animation=\"border\" variant=\"primary\" style={{width:'2rem', height:'2rem',borderWidth:'2px',marginLeft:'2rem'}} />}\n          </div>\n          \n          {props.children}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n","import React from 'react'\nimport styles from './Footer.module.scss'\nimport { Row, Col, Container } from 'react-bootstrap'\nimport { BsFillEnvelopeFill, BsBarChartFill } from 'react-icons/bs'\nimport { FaTwitter, FaGithub } from 'react-icons/fa'\n\n// #TODO add commit hash\n// const commitHash = process.env.REACT_APP_VERSION || 'dev'\n\nexport default function Footer(props) {\n  return (\n    <Container fluid style={{ backgroundColor: 'var(--dark)' }}>\n      <Container className={styles.footer}>\n        <Row>\n          <Col xs={6} sm={{ span: 5, order: 1 }} lg={{ span: 3, order: 1 }}>\n            <p className=\"Xsmall\">\n              RAWGraphs is an open source project designed and developed by{' '}\n              <a\n                href=\"http://densitydesign.org/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                DensityDesign\n              </a>\n              ,{' '}\n              <a\n                href=\"https://calib.ro/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Calibro\n              </a>{' '}\n              and{' '}\n              <a\n                href=\"https://inmagik.com/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Inmagik\n              </a>\n              .\n              <br />© 2013-2021{' '}\n              <a href=\"https://raw.github.com/rawgraphs/rawgraphs-app/master/LICENSE\">\n                (Apache License 2.0)\n              </a>\n            </p>\n          </Col>\n          <Col xs={6} sm={{ span: 5, order: 3 }} lg={{ span: 3, order: 1 }}>\n            <p className=\"Xsmall\"></p>\n          </Col>\n          {/* <Col xs={6} sm={{span:5, order:3}} lg={{span:3,order:1}}><p className=\"Xsmall\">This <span title={commitHash}>version</span> is intended to be available only for the backers of the crowdfunding campaign.</p></Col> */}\n          <Col\n            xs={6}\n            sm={{ span: 6, offset: 1, order: 2 }}\n            md={{ span: 3 }}\n            lg={{ offset: 0 }}\n            xl={{ span: 2, offset: 2 }}\n          >\n            <p>\n              <BsFillEnvelopeFill /> hello at rawgraphs.io\n            </p>\n            <p>\n              <FaTwitter />{' '}\n              <a\n                href=\"https://twitter.com/rawgraphs\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                @rawgraphs\n              </a>\n            </p>\n          </Col>\n          <Col\n            xs={6}\n            sm={{ span: 6, offset: 1, order: 4 }}\n            md={{ span: 2 }}\n            lg={{ offset: 0 }}\n            xl={{ span: 2, offset: 0 }}\n          >\n            <p>\n              <FaGithub />{' '}\n              <a\n                href=\"https://github.com/rawgraphs\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Github\n              </a>\n            </p>\n            <p>\n              <BsBarChartFill />{' '}\n              <a\n                href=\"https://old.rawgraphs.io\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                RAWGraphs v.1\n              </a>\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </Container>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport useWindowSize from '../../hooks/useWindowSize'\nimport { Modal, Button } from 'react-bootstrap'\nimport { BsEnvelopeFill } from 'react-icons/bs'\n\n// import styles from './ScreenSizeAlert.module.scss'\n\nfunction ScreenSizeAlert() {\n  const size = useWindowSize()\n  const [showModal, setShowModal] = useState(size.width < 992)\n  const [modalWasClosed, setModalWasClosed] = useState(false)\n\n  const handleClose = () => {\n    setShowModal(false)\n    setModalWasClosed(true)\n  }\n\n  useEffect(() => {\n    if (modalWasClosed === false) {\n      setShowModal(size.width < 992)\n    }\n  }, [modalWasClosed, size])\n\n  return (\n    <Modal\n      className=\"raw-modal\"\n      show={showModal}\n      onHide={handleClose}\n      backdrop=\"static\"\n      keyboard={false}\n      // size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title as=\"h5\">\n          <span role=\"img\" aria-label=\"Party icon\">\n            🎉\n          </span>{' '}\n          Welcome to the new RAWGraphs!\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p className=\"big\">\n          RAWGraphs 2.0 is designed for {size.width >= 768 ? 'slightly ' : ' '}\n          bigger screens!\n        </p>\n        <p>\n          Resize your browser window or{' '}\n          <a href=\"mailto:?subject=Visit+RAWGraphs+2.0&body=Hello%21%0D%0APlease+do+not+forget+to+take+a+look+at+the+new+version+of+RAWGraphs%21%0D%0A%0D%0AVisit%3A+https%3A%2F%2Fdev.rawgraphs.io%2F%0D%0A%0D%0ASee+you+later%2C%0D%0AThe+RAWGraphs+Team\">\n            <BsEnvelopeFill /> send yourself a reminder\n          </a>{' '}\n          to come back at a better time.\n        </p>\n        <p>Touch devices are not fully supported yet.</p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={handleClose}>\n          Got it!\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default ScreenSizeAlert\n","import * as Comlink from 'comlink'\n/* eslint-disable import/no-webpack-loader-syntax */\nimport Worker from 'worker-loader!./worker'\n\nlet parsingWorker // = new Worker()\n\nexport function parseDatasetInWorker(data, dataTypes, parsingOptions) {\n  try {\n    parsingWorker.terminate()\n  } catch (err) {}\n  parsingWorker = new Worker()\n  let obj = Comlink.wrap(parsingWorker)\n  let out = obj.parseDataset(data, dataTypes, parsingOptions)\n  return out\n}\n\nlet mappingWorker // = new Worker()\n\nexport function mapDataInWorker(\n  chartName,\n  { data, mapping, visualOptions, dataTypes }\n) {\n  try {\n    mappingWorker.terminate()\n  } catch (err) {}\n  mappingWorker = new Worker()\n  let obj = Comlink.wrap(mappingWorker)\n  let out = obj.mapData(chartName, { data, mapping, visualOptions, dataTypes })\n  return out\n}\n","import { useEffect, useState } from 'react'\n\n// Hook\nexport default function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    \n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    \n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    \n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\n","// import React from \"react\"\nimport { BsClock, BsHash, BsType } from 'react-icons/bs'\nimport arEG from 'd3-time-format/locale/ar-EG.json'\nimport caES from 'd3-time-format/locale/ca-ES.json'\nimport csCZ from 'd3-time-format/locale/cs-CZ.json'\nimport daDK from 'd3-time-format/locale/da-DK.json'\nimport deCH from 'd3-time-format/locale/de-CH.json'\nimport deDE from 'd3-time-format/locale/de-DE.json'\nimport enCA from 'd3-time-format/locale/en-CA.json'\nimport enGB from 'd3-time-format/locale/en-GB.json'\nimport enUS from 'd3-time-format/locale/en-US.json'\nimport esES from 'd3-time-format/locale/es-ES.json'\nimport esMX from 'd3-time-format/locale/es-MX.json'\nimport faIR from 'd3-time-format/locale/fa-IR.json'\nimport fiFI from 'd3-time-format/locale/fi-FI.json'\nimport frCA from 'd3-time-format/locale/fr-CA.json'\nimport frFR from 'd3-time-format/locale/fr-FR.json'\nimport heIL from 'd3-time-format/locale/he-IL.json'\nimport huHU from 'd3-time-format/locale/hu-HU.json'\nimport itIT from 'd3-time-format/locale/it-IT.json'\nimport jaJP from 'd3-time-format/locale/ja-JP.json'\nimport koKR from 'd3-time-format/locale/ko-KR.json'\nimport mkMK from 'd3-time-format/locale/mk-MK.json'\nimport nbNO from 'd3-time-format/locale/nb-NO.json'\nimport nlNL from 'd3-time-format/locale/nl-NL.json'\nimport plPL from 'd3-time-format/locale/pl-PL.json'\nimport ptBR from 'd3-time-format/locale/pt-BR.json'\nimport ruRU from 'd3-time-format/locale/ru-RU.json'\nimport svSE from 'd3-time-format/locale/sv-SE.json'\nimport ukUA from 'd3-time-format/locale/uk-UA.json'\nimport zhCN from 'd3-time-format/locale/zh-CN.json'\nimport zhTW from 'd3-time-format/locale/zh-TW.json'\n\n// // creplaced with the following\n// export const DATATYPE_ICONS = {\n//   'date': <BsClock />,\n//   'number': <BsHash />,\n//   'string': <BsType />\n// }\n\nexport const DateIcon = BsClock\nexport const NumberIcon = BsHash\nexport const StringIcon = BsType\n\nexport const dataTypeIcons = {\n  date: DateIcon,\n  number: NumberIcon,\n  string: StringIcon,\n}\n\nexport const localeList = {\n  'ar-EG': arEG,\n  'ca-ES': caES,\n  'cs-CZ': csCZ,\n  'da-DK': daDK,\n  'de-CH': deCH,\n  'de-DE': deDE,\n  'en-CA': enCA,\n  'en-GB': enGB,\n  'en-US': enUS,\n  'es-ES': esES,\n  'es-MX': esMX,\n  'fa-IR': faIR,\n  'fi-FI': fiFI,\n  'fr-CA': frCA,\n  'fr-FR': frFR,\n  'he-IL': heIL,\n  'hu-HU': huHU,\n  'it-IT': itIT,\n  'ja-JP': jaJP,\n  'ko-KR': koKR,\n  'mk-MK': mkMK,\n  'nb-NO': nbNO,\n  'nl-NL': nlNL,\n  'pl-PL': plPL,\n  'pt-BR': ptBR,\n  'ru-RU': ruRU,\n  'sv-SE': svSE,\n  'uk-UA': ukUA,\n  'zh-CN': zhCN,\n  'zh-TW': zhTW,\n}\n\nexport const WEBWORKER_ACTIVE = true\n\nexport const separatorsLabels = {\n  '\\\\t': 'Tab',\n  ';': 'Semicolon',\n  ',': 'Comma',\n  '|': 'Pipe',\n}\n\nexport const separatorsList = Object.keys(separatorsLabels)\n\nexport const DefaultSeparator = \",\"\n\nexport const AGGREGATIONS_LABELS = {\n  \"count\": \"Count\",\n  \"mean\": \"Average\",\n  \"median\": \"Median\",\n  \"max\": \"Max\",\n  \"min\": \"Min\",\n  \"countDistinct\": \"Count unique\",\n  \"sum\": \"Sum\",\n  \"csv\": \"CSV\",\n  \"csvDistinct\": \"CSV (unique)\",\n}\n\nexport const SCALES_LABELS = {\n  \"sequential\": \"Sequential\",\n  \"diverging\": \"Diverging\",\n  \"ordinal\": \"Ordinal\"\n}\n\nexport const COLOR_SCHEMES_LABELS = {\n  \"interpolateBlues\": \"Blue sequential\",\n  \"interpolateGreens\": \"Green sequential\",\n  \"interpolateReds\": \"Red sequential\",\n  \"interpolateRdBu\": \"RdBu diverging\",\n  \"interpolateBrBG\": \"BrBG diverging\",\n  \"interpolatePiYG\": \"PiYG diverging\",\n  \"schemeCategory10\": \"Categorical 10\",\n  \"interpolateTurbo\": \"Turbo discrete\",\n  \"interpolateSpectral\": \"Spectral discrete\"\n}","export default function() {\n  return new Worker(__webpack_public_path__ + \"static/js/worker.c4856da9.worker.js\");\n}\n","import { dsvFormat } from 'd3'\nimport { DefaultSeparator, separatorsList } from '../../constants'\n\nfunction JsonParser(dataString) {\n  //Removing white lines (useful when pasting from sheets, ecc)\n  const trimmedDataString = dataString\n    .trim()\n    .replace(/^(?=\\n)$|^\\s*|\\s*$|\\n\\n+/gm, '')\n  \n  return [JSON.parse(trimmedDataString), {}]\n}\n\nfunction CsvParser(dataString, opts) {\n  //Removing white lines (useful when pasting from sheets, ecc)\n  const trimmedDataString = dataString\n    .trim()\n    .replace(/^(?=\\n)$|^\\s*|\\s*$|\\n\\n+/gm, '')\n  \n  // Use the separator the user gives me, if any\n  if (opts.separator) {\n    return [\n      dsvFormat(opts.separator).parse(trimmedDataString),\n      {\n        separator: opts.separator,\n      },\n    ]\n  }\n  // Otherwise, try to infer it\n  const candidates = []\n  for (const _separator of separatorsList) {\n    const separator = _separator\n      .replace(/\\\\r/g, '\\r')\n      .replace(/\\\\n/g, '\\n')\n      .replace(/\\\\t/g, '\\t')\n    try {\n      const parser = dsvFormat(separator)\n      const parsed = parser.parse(trimmedDataString)\n      if (\n        (parsed.length > 0 && Object.keys(parsed[0]).length > 1) ||\n        separator === DefaultSeparator\n      ) {\n        candidates.push({\n          separator,\n          score: Object.keys(parsed[0]).length,\n          parsed,\n        })\n      }\n    } catch (e) {}\n  }\n  candidates.sort((a, b) => b.score - a.score)\n  return [candidates[0].parsed, { separator: candidates[0].separator }]\n}\n\nexport const SparqlMarker = Symbol(\"RawgraphsSparqlMarker\")\n\nfunction SparqlParser(data, opts) {\n  if (data[SparqlMarker] === true) {\n    return [data, {}]\n  } \n  throw new Error(\"Not a sparql result\")\n}\n\nconst PARSERS = [\n  { dataType: 'sparql', parse: SparqlParser },\n  { dataType: 'json', parse: JsonParser },\n  { dataType: 'csv', parse: CsvParser },\n]\n\nexport function parseData(data, opts) {\n  for (const parser of PARSERS) {\n    try {\n      const [parsed, extra] = parser.parse(data, opts)\n      return [parser.dataType, parsed, extra]\n    } catch (e) {\n      // console.error('Parsing error', e)\n    }\n  }\n  return [null, null]\n}\n\nexport function parseAndCheckData(dataString, opts) {\n  const [dataType, data, extra] = parseData(dataString, opts)\n  if (dataType === null) {\n    // This should never happen\n    return [\n      dataType,\n      data,\n      'Cannot parse dataset! (This should never happen)',\n      {},\n    ]\n  } else {\n    if (dataType === 'json') {\n      return ['json', data, null, extra]\n    } else if (data.length > 0) {\n      return [dataType, data, null, extra]\n    } else {\n      return [null, null, \"We can't parse your data.\", {}]\n    }\n  }\n}\n\nfunction isScalarType(item) {\n  return ['string', 'number', 'boolean'].includes(typeof item)\n}\n\nexport function normalizeJsonArray(jsonArray) {\n  return jsonArray\n    .map((element) => {\n      let iterateElement = element\n      if (Array.isArray(iterateElement)) {\n        const tmp = {}\n        iterateElement.forEach((item, i) => {\n          tmp[`Column ${i + 1}`] = item\n        })\n        iterateElement = tmp\n      }\n      if (isScalarType(iterateElement) || iterateElement === null) {\n        iterateElement = { value: iterateElement }\n      }\n      const outElement = {}\n      for (const property in iterateElement) {\n        const value = iterateElement[property]\n        const valueType = typeof value\n        if (Array.isArray(value)) {\n          outElement[property] = value.filter(isScalarType).join(' ')\n        } else if (valueType === 'object' && valueType !== null) {\n          for (const nestedProperty in value) {\n            const nestedValue = value[nestedProperty]\n            if (isScalarType(nestedValue)) {\n              outElement[`${property}.${nestedProperty}`] = nestedValue\n            }\n          }\n        } else if (isScalarType(value)) {\n          outElement[property] = value\n        }\n      }\n      return outElement\n    })\n    .filter((item) => item !== null)\n}\n","import { flatMap, omit, map } from 'lodash'\n\nexport function stackData(data, column) {\n  return flatMap(data, (record) => {\n    const key = record[column]\n    const others = omit(record, column)\n    return map(others, (value, prop) => {\n      return {\n        [column]: key,\n        column: prop,\n        value,\n      }\n    })\n  })\n}\n","import { parseDataset } from '@rawgraphs/rawgraphs-core'\nimport { difference, get } from 'lodash'\nimport { useCallback, useState } from 'react'\nimport { DefaultSeparator, localeList, WEBWORKER_ACTIVE } from '../constants'\nimport { parseDatasetInWorker } from '../worker'\nimport {\n  normalizeJsonArray,\n  parseAndCheckData,\n} from './useDataLoaderUtils/parser'\nimport { stackData } from './useDataLoaderUtils/stack'\n\nexport const DATA_LOADER_MODE = {\n  DIRECT: 'direct',\n  REPLACE: 'replace',\n}\n\nconst __cache = {}\n\nexport default function useDataLoader() {\n  /* Data to be plot in the chart */\n  /* First stage: raw user input */\n  const [userInput, setUserInput] = useState('')\n  const [dataSource, setDataSource] = useState(null)\n\n  /* Second stage: parsed data and user data type (i.e. csv, json, ...) */\n  /*\n   * In case user data type is json, userData is not filled immediately.\n   * Instead, a JSON view is first shown asking the user to select an\n   * array inside the JSON tree. The (parsed) content of the array will\n   * be used to fill `userData`. In case of some error during parsing,\n   * the `parseError` state holds the error description\n   */\n  const [userData, setUserData] = useState(null)\n  const [userDataType, setUserDataType] = useState(null)\n  const [parseError, setParserError] = useState(null)\n  const [unstackedInfo, setUnstackedInfo] = useState([null, null])\n\n  /* Data Parsing Options */\n  const [separator, setSeparator] = useState(DefaultSeparator)\n  const [thousandsSeparator, setThousandsSeparator] = useState(',')\n  const [decimalsSeparator, setDecimalsSeparator] = useState('.')\n  const [locale, setLocale] = useState(navigator.language || 'en-US')\n  const [stackDimension, setStackDimension] = useState()\n\n  /* Third stage: data ready to become a chart */\n  const [data, setData] = useState(null)\n\n  /* Stack operations */\n  const [unstackedData, unstackedColumns] = unstackedInfo\n\n  /* Misc */\n  const [loading, setLoading] = useState(false)\n  const [mode, setMode] = useState(DATA_LOADER_MODE.DIRECT)\n  const [\n    replaceRequiresConfirmation,\n    setReplaceRequiresConfirmation,\n  ] = useState(undefined)\n\n  /* Unpacking */\n  const columnsTypes = unstackedColumns ?? data?.dataTypes\n\n  //wrapper for async parse via web worker\n  const parseDatasetAsyncAndSetData = useCallback(\n    (data, dataTypes, parsingOptions) => {\n      setLoading(true)\n      return parseDatasetInWorker(data, dataTypes, {\n        ...parsingOptions,\n        dateLocale: get(localeList, parsingOptions.locale),\n      })\n        .then((resultData) => {\n          return resultData\n        })\n        .catch((err) => {\n          console.log('eee', err)\n        })\n        .finally(() => {\n          setLoading(false)\n        })\n    },\n    [setLoading]\n  )\n\n  const parseDatasetSyncAndSetData = useCallback(\n    (data, dataTypes, parsingOptions) => {\n      setLoading(true)\n      return new Promise((resolve, reject) => {\n        try {\n          const resultData = parseDataset(data, dataTypes, {\n            ...parsingOptions,\n            dateLocale: get(localeList, parsingOptions.locale),\n          })\n          resolve(resultData)\n        } catch (e) {\n          reject(e)\n        } finally {\n          setLoading(false)\n        }\n      })\n    },\n    [setLoading]\n  )\n\n  const parseDatasetAuto = useCallback(\n    (data, dataTypes, parsingOptions) => {\n      const worker = WEBWORKER_ACTIVE\n        ? parseDatasetAsyncAndSetData\n        : parseDatasetSyncAndSetData\n      return worker(data, dataTypes, parsingOptions)\n    },\n    [parseDatasetAsyncAndSetData, parseDatasetSyncAndSetData]\n  )\n\n  const parseDatasetAndSetData = useCallback(\n    (data, dataTypes, parsingOptions) => {\n      return parseDatasetAuto(data, dataTypes, parsingOptions).then((data) =>\n        setData(data)\n      )\n    },\n    [parseDatasetAuto]\n  )\n\n  const reset = useCallback(() => {\n    setData(null)\n    setUserData(null)\n    setUserDataType(null)\n    setUserInput('')\n    setDataSource(null)\n    setParserError(null)\n    setStackDimension(null)\n    setUnstackedInfo([null, null])\n  }, [])\n\n  const hydrateFromSavedProject = useCallback(\n    (project) => {\n      const {\n        userInput,\n        userData,\n        userDataType,\n        parseError,\n        unstackedColumns,\n        unstackedData,\n        dataTypes,\n        separator,\n        thousandsSeparator,\n        decimalsSeparator,\n        locale,\n        stackDimension,\n        dataSource,\n      } = project\n      setUserInput(userInput)\n      setUserDataType(userDataType)\n      setSeparator(separator)\n      setThousandsSeparator(thousandsSeparator)\n      setDecimalsSeparator(decimalsSeparator)\n      setLocale(locale)\n      setStackDimension(stackDimension)\n      setDataSource(dataSource)\n      setUserData(userData)\n      setParserError(parseError)\n      setUnstackedInfo([unstackedData, unstackedColumns])\n      parseDatasetAndSetData(userData, dataTypes, {\n        thousandsSeparator,\n        decimalsSeparator,\n        locale,\n      })\n    },\n    [parseDatasetAndSetData]\n  )\n\n  const handleReplacingData = useCallback(\n    (userData) => {\n      parseDatasetAuto(userData, undefined, {\n        locale,\n        decimal: decimalsSeparator,\n        group: thousandsSeparator,\n      }).then((newDataInferred) => {\n        if (newDataInferred.errors.length > 0) {\n          // Parsing resulted in errors, cannot replace data safely!\n          __cache.replacedData = newDataInferred\n          setReplaceRequiresConfirmation('parse-error')\n        } else {\n          const oldColNames = Object.keys(columnsTypes)\n          const newColNames = Object.keys(newDataInferred.dataTypes)\n          const missingCols = difference(oldColNames, newColNames)\n          if (missingCols.length > 0) {\n            // There is at least one column missing in the new dataset\n            // Replace cannot be safe\n            __cache.replacedData = newDataInferred\n            setReplaceRequiresConfirmation('missing-column:' + missingCols[0])\n          } else {\n            const nextDataTypes = {\n              ...newDataInferred.dataTypes,\n              ...columnsTypes, // Keep eventual overrides in data types\n            }\n            parseDatasetAuto(userData, nextDataTypes, {\n              locale,\n              decimal: decimalsSeparator,\n              group: thousandsSeparator,\n            }).then((newData) => {\n              if (newData.errors.length > 0) {\n                // There was some error in type coercing, data cannot be replaced safely\n                __cache.replacedData = newDataInferred\n                setReplaceRequiresConfirmation('type-mismatch')\n              } else {\n                if (stackDimension) {\n                  setUnstackedInfo([userData, newData.dataTypes])\n                  const stackedData = stackData(userData, stackDimension)\n                  setUserData(stackedData)\n                  parseDatasetAuto(stackedData, data.dataTypes, {\n                    locale,\n                    decimal: decimalsSeparator,\n                    group: thousandsSeparator,\n                  }).then(data => setData(data))\n                } else {\n                  setData(newData)\n                }\n              }\n            })\n          }\n        }\n      })\n    },\n    [\n      columnsTypes,\n      data,\n      decimalsSeparator,\n      locale,\n      parseDatasetAuto,\n      stackDimension,\n      thousandsSeparator,\n    ]\n  )\n\n  const handleNewUserData = useCallback(\n    (nextUserData) => {\n      setUserData(nextUserData)\n      if (mode === DATA_LOADER_MODE.DIRECT) {\n        parseDatasetAndSetData(nextUserData, undefined, {\n          locale,\n          decimal: decimalsSeparator,\n          group: thousandsSeparator,\n        })\n      } else if (mode === DATA_LOADER_MODE.REPLACE) {\n        handleReplacingData(nextUserData)\n      } else {\n        console.error('Unknown data loader mode!')\n      }\n    },\n    [\n      decimalsSeparator,\n      handleReplacingData,\n      locale,\n      mode,\n      parseDatasetAndSetData,\n      thousandsSeparator,\n    ]\n  )\n\n  /*\n   * Callback to handle user injecting data\n   * When user uploads some data (in any possible way), we store the raw user input at first\n   * Then we try to read it using different parsers (notably json and csv)\n   * Finally, if read is successful, we go inferring types using the raw-core library\n   */\n  function setUserDataAndDetect(str, source, options) {\n    const [dataType, parsedUserData, error, extra] = parseAndCheckData(str, {\n      separator: get(options, 'separator', null),\n    })\n    setUserInput(str)\n    setDataSource(source)\n    setUserDataType(dataType)\n    setParserError(error)\n    if (extra && typeof extra === \"object\" && \"separator\" in extra) {\n      setSeparator(extra.separator)\n    }\n    // Data parsed ok set parent data\n    if (dataType !== 'json' && !error) {\n      handleNewUserData(parsedUserData)\n    }\n    const jsonPath = dataSource?.jsonPath ?? undefined\n    if (dataType === 'json' && !error && jsonPath !== undefined) {\n      const jsonData = get(parsedUserData, jsonPath, null)\n      if (Array.isArray(jsonData)) {\n        handleNewUserData(jsonData)\n      }\n    }\n  }\n\n  const setJsonData = useCallback(\n    (data, path) => {\n      const normalized = normalizeJsonArray(data)\n      setUserData(normalized)\n      setDataSource({...dataSource, jsonPath: path })\n      handleNewUserData(normalized)\n    },\n    [dataSource, handleNewUserData]\n  )\n\n  /*\n   * Callback to handle user changing separator\n   * When the separator is changed, a fresh parsing of raw user input is required for proper handling\n   * Steps are very similar with respect to the `setUserInputAndDetect` callback, except for the\n   * fact that we take user input from state instead of from parameters\n   */\n  function handleChangeSeparator(newSeparator) {\n    const [dataType, parsedUserData, error] = parseAndCheckData(userInput, {\n      separator: newSeparator,\n    })\n    setSeparator(newSeparator)\n    setUserDataType(dataType)\n    setParserError(error)\n    if (dataType !== 'json' && !error && newSeparator) {\n      setUserData(parsedUserData)\n      parseDatasetAndSetData(parsedUserData, undefined, {\n        locale,\n        decimal: decimalsSeparator,\n        group: thousandsSeparator,\n      })\n    }\n  }\n\n  function handleChangeLocale(newLocale) {\n    if (!data) {\n      return\n    }\n    parseDatasetAndSetData(data.dataset, data.dataTypes, {\n      locale: newLocale,\n      decimal: decimalsSeparator,\n      group: thousandsSeparator,\n    })\n    setLocale(newLocale)\n  }\n\n  function handleChangeDecimalSeparator(newDecimalSeparator) {\n    const [dataType, parsedUserData, error] = parseAndCheckData(userInput, {\n      separator,\n    })\n    setDecimalsSeparator(newDecimalSeparator)\n    setUserDataType(dataType)\n    setParserError(error)\n    if (dataType !== 'json' && !error) {\n      setUserData(parsedUserData)\n      setLoading(true)\n      parseDatasetAndSetData(parsedUserData, undefined, {\n        locale,\n        decimal: newDecimalSeparator,\n        group: thousandsSeparator,\n      })\n      //setData(parseDataset(parsedUserData, undefined, {locale, decimal: newDecimalSeparator, group:thousandsSeparator}));\n    }\n  }\n\n  function handleChangeThousandsSeparator(newThousandsSeparator) {\n    const [dataType, parsedUserData, error] = parseAndCheckData(userInput, {\n      separator,\n    })\n    setThousandsSeparator(newThousandsSeparator)\n    setUserDataType(dataType)\n    setParserError(error)\n    if (dataType !== 'json' && !error) {\n      setUserData(parsedUserData)\n      parseDatasetAndSetData(parsedUserData, undefined, {\n        locale,\n        decimal: decimalsSeparator,\n        group: newThousandsSeparator,\n      })\n      // setData(parseDataset(parsedUserData, undefined, {locale, decimal: decimalsSeparator, group:newThousandsSeparator}));\n    }\n  }\n\n  /*\n   * Callback to handle user coercing a type of a column\n   * When this happens, we don't need to go through data parsing again, we just invoke\n   * the raw-core library starting from the parsed data (stage-2 data)\n   */\n  function coerceTypes(nextTypes) {\n    parseDatasetAndSetData(userData, nextTypes, {\n      locale,\n      decimal: decimalsSeparator,\n      group: thousandsSeparator,\n    })\n  }\n\n  /*\n   * Callback to handle user selecting a data sample from RawGraphs.io\n   * When this happens, we have data parsed with dsv with a proper separator out of the box\n   *   since in this case data are rigorously checked\n   * So we just take them as good and use the raw-core library to infer types\n   */\n  function loadSample(rawData, sampleSeparator) {\n    setSeparator(sampleSeparator)\n    setUserDataAndDetect(\n      rawData,\n      { type: 'sample' },\n      { separator: sampleSeparator }\n    )\n  }\n\n  function handleInlineEdit(newDataset) {\n    setUserData(newDataset)\n    parseDatasetAndSetData(newDataset, data.dataTypes, {\n      locale,\n      decimal: decimalsSeparator,\n      group: thousandsSeparator,\n    })\n    // setData(parseDataset(newDataset, data.dataTypes, {locale}))\n  }\n\n  function handleStackOperation(column) {\n    setStackDimension(column)\n    if (column !== null) {\n      if (unstackedData === null) {\n        setUnstackedInfo([userData, data.dataTypes])\n      }\n      const stackedData = stackData(unstackedData || userData, column)\n      setUserData(stackedData)\n      parseDatasetAndSetData(stackedData, undefined, {\n        locale,\n        decimal: decimalsSeparator,\n        group: thousandsSeparator,\n      })\n      // setData(parseDataset(stackedData, undefined, { locale }))\n    } else {\n      setUserData(unstackedData)\n      parseDatasetAndSetData(unstackedData, unstackedColumns, {\n        locale,\n        decimal: decimalsSeparator,\n        group: thousandsSeparator,\n      })\n      setUnstackedInfo([null, null])\n    }\n  }\n\n  const startDataReplace = useCallback(() => {\n    setMode(DATA_LOADER_MODE.REPLACE)\n    __cache.userInput = userInput\n    __cache.userDataType = userDataType\n    __cache.dataSource = dataSource\n    __cache.userData = userData\n    setUserInput(null)\n    setUserDataType(null)\n    setDataSource(null)\n    setUserData(null)\n  }, [dataSource, userData, userDataType, userInput])\n\n  const cancelDataReplace = useCallback(() => {\n    setReplaceRequiresConfirmation(false)\n    setMode(DATA_LOADER_MODE.DIRECT)\n    setUserInput(__cache.userInput)\n    setUserDataType(__cache.userDataType)\n    setDataSource(__cache.dataSource)\n    setUserData(__cache.userData)\n  }, [])\n\n  const commitDataReplace = useCallback(() => {\n    setReplaceRequiresConfirmation(false)\n    setData(__cache.replacedData)\n    setParserError(null)\n    setStackDimension(null)\n    setUnstackedInfo([null, null])\n  }, [])\n\n  return {\n    userInput,\n    setUserInput: setUserDataAndDetect,\n    userData,\n    userDataType,\n    parseError,\n    unstackedData,\n    unstackedColumns,\n    separator,\n    setSeparator: handleChangeSeparator,\n    thousandsSeparator,\n    setThousandsSeparator: handleChangeThousandsSeparator,\n    decimalsSeparator,\n    setDecimalsSeparator: handleChangeDecimalSeparator,\n    locale,\n    setLocale: handleChangeLocale,\n    stackDimension,\n    dataSource,\n    data,\n    loading,\n    coerceTypes,\n    loadSample,\n    handleInlineEdit,\n    handleStackOperation,\n    setJsonData,\n    resetDataLoader: reset,\n    hydrateFromSavedProject,\n    dataLoaderMode: mode,\n    startDataReplace,\n    cancelDataReplace,\n    commitDataReplace,\n    replaceRequiresConfirmation,\n  }\n}\n","import React, { useMemo, useRef, useState, useCallback } from 'react'\nimport ReactDataGrid from 'react-data-grid'\nimport { Overlay, OverlayTrigger } from 'react-bootstrap'\nimport classNames from 'classnames'\nimport { getTypeName, dateFormats } from '@rawgraphs/rawgraphs-core'\nimport S from './DataGrid.module.scss'\nimport { keyBy, get, isEqual } from 'lodash'\nimport {\n  dataTypeIcons,\n  DateIcon,\n  StringIcon,\n  NumberIcon,\n} from '../../constants'\nimport { BsFillCaretRightFill } from 'react-icons/bs'\n\nconst DATE_FORMATS = Object.keys(dateFormats)\n\nconst DateFormatSelector = React.forwardRef(\n  ({ currentFormat, onChange, className, ...props }, ref) => {\n    return (\n      <div\n        className={classNames(className, S['date-format-selector'])}\n        ref={ref}\n        {...props}\n      >\n        {DATE_FORMATS.map((dateFmt) => (\n          <div\n            key={dateFmt}\n            className={classNames(S['date-format-selector-entry'], {\n              [S.selected]: get(currentFormat, 'dateFormat', '') === dateFmt,\n            })}\n            onClick={(e) => {\n              e.stopPropagation()\n              e.preventDefault()\n              onChange &&\n                onChange({\n                  type: 'date',\n                  dateFormat: dateFmt,\n                })\n            }}\n          >\n            {dateFmt}\n          </div>\n        ))}\n      </div>\n    )\n  }\n)\n\nfunction DataTypeSelector({\n  currentType: typeDescriptor,\n  onTypeChange,\n  currentTypeComplete,\n}) {\n  const dataTypeIconDomRef = useRef(null)\n  const [showPicker, setShowPicker] = useState(false)\n  const currentType = get(typeDescriptor, 'type', typeDescriptor)\n\n  const handleTypeChange = useCallback(\n    (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      const newType = e.target.dataset.datatype\n      if (\n        typeof onTypeChange === 'function' &&\n        !isEqual(newType, typeDescriptor)\n      ) {\n        onTypeChange(newType)\n      }\n      setShowPicker(false)\n    },\n    [typeDescriptor, onTypeChange]\n  )\n\n  const handleTypeChangeDate = useCallback(\n    (newType) => {\n      if (\n        typeof onTypeChange === 'function' &&\n        !isEqual(newType, typeDescriptor)\n      ) {\n        onTypeChange(newType)\n      }\n      setShowPicker(false)\n    },\n    [typeDescriptor, onTypeChange]\n  )\n\n  const handleTargetClick = useCallback(\n    (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      setShowPicker(!showPicker)\n    },\n    [showPicker]\n  )\n\n  const Icon = dataTypeIcons[currentType]\n\n  return (\n    <>\n      <span\n        role=\"button\"\n        className={S['data-type-selector-trigger']}\n        ref={dataTypeIconDomRef}\n        onClick={handleTargetClick}\n      >\n        <Icon />\n      </span>\n      <Overlay\n        target={dataTypeIconDomRef.current}\n        show={showPicker}\n        placement=\"bottom-start\"\n        rootClose={true}\n        rootCloseEvent=\"click\"\n        onHide={() => {\n          setShowPicker(false)\n        }}\n        container={document.body}\n      >\n        {({\n          placement,\n          scheduleUpdate,\n          arrowProps,\n          outOfBoundaries,\n          show: _show,\n          ...props\n        }) => (\n          <div\n            id=\"data-type-selector\"\n            className={S['data-type-selector']}\n            onClick={(e) => e.stopPropagation()}\n            {...props}\n          >\n            <div\n              data-datatype=\"number\"\n              onClick={handleTypeChange}\n              className={classNames(S['data-type-selector-item'], {\n                [S.selected]: currentType === 'number',\n              })}\n            >\n              <NumberIcon /> Number\n            </div>\n            <OverlayTrigger\n              placement=\"right-start\"\n              overlay={\n                <DateFormatSelector\n                  currentType={typeDescriptor}\n                  onChange={handleTypeChangeDate}\n                />\n              }\n              trigger=\"click\"\n            >\n              {({ ref, ...triggerHandler }) => (\n                <div\n                  ref={ref}\n                  data-datatype=\"date\"\n                  {...triggerHandler}\n                  className={classNames(\n                    S['data-type-selector-item'],\n                    S['parent-type-selector'],\n                    { [S.selected]: currentType === 'date' }\n                  )}\n                >\n                  <div>\n                    <DateIcon />\n                    {'Date'}\n                    {currentType === 'date' && (\n                      <span className={S['date-format-preview']}>\n                        {' (' + (currentTypeComplete.dateFormat) + ')  '}\n                      </span>\n                    )}\n                  </div>\n                  <BsFillCaretRightFill\n                    style={{ marginRight: 0, fill: 'var(--gray-700)' }}\n                  />\n                </div>\n              )}\n            </OverlayTrigger>\n            <div\n              data-datatype=\"string\"\n              onClick={handleTypeChange}\n              className={classNames(S['data-type-selector-item'], {\n                [S.selected]: currentType === 'string',\n              })}\n            >\n              <StringIcon /> String\n            </div>\n          </div>\n        )}\n      </Overlay>\n    </>\n  )\n}\n\nfunction HeaderRenderer({ ...props }) {\n  const { column } = props\n  const { key, sortColumn, sortDirection } = column\n  return (\n    <div\n      className={classNames(\n        { [S['raw-col-header']]: true },\n        {\n          [S['unsorted']]:\n            key !== sortColumn ||\n            (key === sortColumn && sortDirection === 'NONE'),\n        },\n        { [S['acs']]: key === sortColumn && sortDirection === 'ASC' },\n        { [S['desc']]: key === sortColumn && sortDirection === 'DESC' }\n      )}\n    >\n      <DataTypeSelector\n        currentType={column._raw_datatype}\n        onTypeChange={column._raw_coerceType}\n        currentTypeComplete={column._raw_datatype}\n      />\n      <span\n        className={classNames(S['column-name'], 'text-truncate', 'd-block')}\n        title={column.name}\n      >\n        {column.name}\n      </span>\n    </div>\n  )\n}\n\nexport default function DataGrid({\n  userDataset,\n  dataset,\n  errors,\n  dataTypes,\n  coerceTypes,\n  onDataUpdate,\n}) {\n  const [[sortColumn, sortDirection], setSort] = useState(['id', 'NONE'])\n\n  const keyedErrors = useMemo(() => keyBy(errors, 'row'), [errors])\n\n  const containerEl = useRef()\n\n  // Make id column just as large as needed\n  // Adjust constants to fit cell padding and font size\n  // (Math.floor(Math.log10(data.dataset.length)) + 1) is the number\n  //   of digits of the highest id\n  const idColumnWidth =\n    24 + 8 * (Math.floor(Math.log10(userDataset.length)) + 1)\n  \n  const equalDinstribution = (containerEl.current?.getBoundingClientRect().width - idColumnWidth - 1) / Object.keys(dataTypes).length\n  const columnWidth = equalDinstribution ? Math.max(equalDinstribution, 170) : 170;\n\n  const columns = useMemo(() => {\n    if (!userDataset || !dataTypes) {\n      return []\n    }\n    return [\n      {\n        key: '_id',\n        name: '',\n        headerRenderer: () => null,\n        frozen: true,\n        width: idColumnWidth,\n        sortable: true,\n      },\n      ...Object.keys(dataTypes).map((k, i) => ({\n        key: k,\n        name: k,\n        sortColumn: sortColumn,\n        sortDirection: sortDirection,\n        headerRenderer: HeaderRenderer,\n        editable: true,\n        formatter: ({ row }) => {\n          return (\n            <div\n              className={classNames({ [S['has-error']]: row?._errors?.[k] })}\n            >\n              {row[k]?.toString()}\n              {/* {row[k]} */}\n            </div>\n          )\n        },\n        _raw_datatype: dataTypes[k],\n        _raw_coerceType: (nextType) =>\n          coerceTypes({ ...dataTypes, [k]: nextType }),\n        sortable: true,\n        resizable: true,\n        width: columnWidth\n      })),\n    ]\n  }, [\n    coerceTypes,\n    dataTypes,\n    userDataset,\n    idColumnWidth,\n    columnWidth,\n    sortColumn,\n    sortDirection,\n  ])\n\n  const sortedDataset = useMemo(() => {\n    let datasetWithIds = userDataset.map((item, i) => ({\n      // Using .map ensures that we are not mutating a property\n      ...item,\n      _id: i + 1, // Give items some id to populate left-most column\n      _stage3: dataset[i], // The dataset parsed by raw lib basing on data types is needed for sorting!\n      _errors: keyedErrors[i]?.error, // Inject errors to format cells with parsing errors\n    }))\n    if (sortDirection === 'NONE') return datasetWithIds\n\n    const sortColumnType = getTypeName(dataTypes[sortColumn])\n\n    if (sortColumnType === 'number') {\n      datasetWithIds = datasetWithIds.sort(\n        (a, b) => a._stage3[sortColumn] - b._stage3[sortColumn]\n      )\n    } else if (sortColumnType === 'date') {\n      datasetWithIds =\n        datasetWithIds.sort(\n          (a, b) =>\n            a._stage3[sortColumn]?.valueOf() ??\n            0 - b._stage3[sortColumn]?.valueOf()\n        ) ?? 0\n    } else {\n      datasetWithIds = datasetWithIds.sort((a, b) =>\n        a._stage3[sortColumn]\n          ?.toString()\n          .localeCompare(b._stage3[sortColumn].toString())\n      )\n    }\n\n    return sortDirection === 'DESC' ? datasetWithIds.reverse() : datasetWithIds\n  }, [userDataset, sortDirection, dataTypes, sortColumn, dataset, keyedErrors])\n\n  const handleSort = useCallback((columnKey, direction) => {\n    setSort([columnKey, direction])\n  }, [])\n\n  return (\n    <div ref={containerEl}>\n      <ReactDataGrid\n        minColumnWidth={idColumnWidth}\n        columns={columns}\n        rows={sortedDataset}\n        rowHeight={48}\n        sortColumn={sortColumn}\n        sortDirection={sortDirection}\n        onSort={handleSort}\n        height={432}\n        onColumnResize={() => {\n          \n        }}\n        onRowsUpdate={(update) => {\n          if (update.action === 'CELL_UPDATE') {\n            const newDataset = [...userDataset]\n            newDataset[update.fromRow] = {\n              ...newDataset[update.fromRow],\n              [update.cellKey]: update.updated[update.cellKey],\n            }\n            onDataUpdate && onDataUpdate(newDataset)\n          }\n        }}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Row, Col, Card } from 'react-bootstrap'\nimport styles from './DataSamples.module.scss'\n\nconst samplesList = [\n  {\n    name: 'Hate crimes in New York',\n    category: 'Alluvial Diagram',\n    url: './sample-datasets/Alluvial diagram - Hate crimes in New York.tsv',\n    delimiter: '\\t',\n    sourceName: 'NYC Open Data',\n    sourceURL:\n      'https://data.cityofnewyork.us/Public-Safety/NYPD-Hate-Crimes/bqiq-cu78',\n  },\n  {\n    name: 'Lannister vs Starck relationships',\n    category: 'Arc diagrams',\n    url:\n      './sample-datasets/Arc diagrams - Lannister vs Starck relationships.tsv',\n    delimiter: '\\t',\n    sourceName: 'T. Breid via Kaggle',\n    sourceURL: 'https://www.kaggle.com/theobreid/got-data',\n  },\n  {\n    name: 'EU Index of consumer prices',\n    category: 'Horizon Graph',\n    url: './sample-datasets/Horizon Graph - EU Index of consumer prices.tsv',\n    delimiter: '\\t',\n    sourceName: 'Eurostat',\n    sourceURL:\n      'https://ec.europa.eu/eurostat/databrowser/bookmark/d84c6140-ed7e-443e-baf9-918679862d58?lang=en',\n  },\n\n  {\n    name: 'New York mean wage per occupation',\n    category: 'Beeswarm plot',\n    url: './sample-datasets/Beeswarm plot - NY mean wages.tsv',\n    delimiter: '\\t',\n    sourceName: 'NYC Open Data',\n    sourceURL:\n      'https://data.ny.gov/w/gkgz-nw24/caer-yrtv?cur=S3JXBWlXCbs&from=SAa8_R9mOdD',\n  },\n\n  {\n    name: 'Temperature in Paris during the World War II',\n    category: 'Contour plot',\n    url:\n      './sample-datasets/Contour plot - Mean temperature in Paris 1944-1945.tsv',\n    delimiter: '\\t',\n    sourceName: 'NOAA',\n    sourceURL:\n      'https://www.ncdc.noaa.gov/data-access/land-based-station-data/land-based-datasets/world-war-ii-era-data',\n  },\n\n  {\n    name: 'Highest grossing movies in history',\n    category: 'Bubble chart',\n    url: './sample-datasets/Bubble Chart - TOP 50 Groossing Movies.tsv',\n    delimiter: '\\t',\n    sourceName: 'Wikipedia',\n    sourceURL:\n      'https://en.wikipedia.org/w/index.php?title=List_of_highest-grossing_films&oldid=1023491946',\n  },\n\n  {\n    name: 'Foreign residents in Milan',\n    category: 'Bumpchart',\n    url: './sample-datasets/Bump chart - Foreign residents in Milan.tsv',\n    delimiter: '\\t',\n    sourceName: 'Comune di Milano',\n    sourceURL:\n      'https://dati.comune.milano.it/dataset/ds74-popolazione-residenti-stranieri-cittadinanza',\n  },\n\n  {\n    name: 'Most populated cities per continent',\n    category: 'Circle packing',\n    url: './sample-datasets/Circle Packing - Most populated cities.tsv',\n    delimiter: '\\t',\n    sourceName: 'Wikidata',\n    sourceURL:\n      'https://query.wikidata.org/#SELECT%20%3Fitem%20%3FitemLabel%20%3Fpopulation%20%3Fcountry%20%3FcountryLabel%20%3Fcontinent%20%3FcontinentLabel%0AWHERE%20%7B%0A%20%20%3Fitem%20wdt%3AP31%20wd%3AQ1637706%20.%20%23%20get%20things%20that%20are%20bands%0A%20%20%3Fitem%20wdt%3AP1082%20%3Fpopulation%20.%0A%20%20%23%3Fitems%20wdt%3AP571%20%3Fdate%20.%20%23%20get%20the%20date%20when%20the%20band%20was%20founded%0A%20%20%3Fitem%20wdt%3AP17%20%3Fcountry%20.%0A%20%20%3Fcountry%20wdt%3AP30%20%3Fcontinent%20.%0A%20%20%0A%20%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22%5BAUTO_LANGUAGE%5D%2Cen%22.%20%7D%0A%7D%0A',\n  },\n\n  {\n    name: 'Kobe Bryant shoots',\n    category: 'Hexagonal Binning, Voronoi diagram',\n    url: './sample-datasets/Hexbin - basketball shots.tsv',\n    delimiter: '\\t',\n    sourceName: 'Kaggle',\n    sourceURL: 'https://www.kaggle.com/c/kobe-bryant-shot-selection/',\n  },\n\n  {\n    name: 'Orchestras by musical instrument',\n    category: 'Treemap',\n    url: './sample-datasets/Treemap - Orchestra.tsv',\n    delimiter: '\\t',\n    sourceName: 'Wikipedia',\n    sourceURL:\n      'https://en.wikipedia.org/w/index.php?title=Orchestra&oldid=1022472978',\n  },\n\n  {\n    name: 'Italians PMs and Presidents',\n    category: 'Gantt chart',\n    url: './sample-datasets/Gantt chart - Italian PMs and presidents.tsv',\n    delimiter: '\\t',\n    sourceName: 'Wikidata',\n    sourceURL:\n      'https://query.wikidata.org/#%23Primi%20ministri%0ASELECT%20%3Fitem%20%3FitemLabel%20%3Fstart%20%3Fend%0AWHERE%20%0A%7B%0A%20%20%3Fitem%20p%3AP39%20%3Fposition.%0A%20%20%3Fposition%20ps%3AP39%20wd%3AQ332711%3B%0A%20%20%20%20%20%20%20%20pq%3AP580%20%3Fstart%3B%0A%20%20%20%20%20%20%20%20pq%3AP582%20%3Fend%0A%20%20%23%3Fstart%20wdt%3AP580%20%3Fitem.%0A%20%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%22%5BAUTO_LANGUAGE%5D%2Cen%22.%20%7D%0A%7D',\n  },\n\n  {\n    name: 'Revenues per Music format',\n    category: 'Line chart',\n    url: './sample-datasets/Line chart - RIAA Music format revenues.tsv',\n    delimiter: '\\t',\n    sourceName: 'RIAA',\n    sourceURL: 'https://www.riaa.com/u-s-sales-database/',\n  },\n\n  {\n    name: 'Energy flows in UK (2050)',\n    category: 'Sankey diagram',\n    url: './sample-datasets/Sankey diagram - Energy flows.tsv',\n    delimiter: '\\t',\n    sourceName: 'gov.uk',\n    sourceURL:\n      'https://www.gov.uk/government/publications/2050-pathways-calculator-with-costs',\n  },\n\n  {\n    name: 'Aromas of wine and frequency',\n    category: 'Sunburst Diagram',\n    url: './sample-datasets/Sunburst - Wine Aromas.tsv',\n    delimiter: '\\t',\n    sourceName: 'Own work',\n    sourceURL: '',\n  },\n\n  {\n    name: 'Happiness index',\n    category: 'Multiset Barchart',\n    url: './sample-datasets/Multiset Barchart - Happiness Index.tsv',\n    delimiter: '\\t',\n    sourceName: 'World Happiness Report',\n    sourceURL: 'https://worldhappiness.report/',\n  },\n\n  {\n    name: 'GDP sector composition',\n    category: 'Pie chart, Stacked barchart',\n    url: './sample-datasets/Stacked barchart - GDP sector composition.tsv',\n    delimiter: '\\t',\n    sourceName: 'Wikipedia',\n    sourceURL:\n      'https://en.wikipedia.org/w/index.php?title=List_of_countries_by_GDP_sector_composition&oldid=1022131842',\n  },\n\n  {\n    name: 'Felidae classification (cats and friends)',\n    category: 'Dendrogram, Circular dendrogram',\n    url: './sample-datasets/Dendrogram - Felidae classification.tsv',\n    delimiter: '\\t',\n    sourceName: 'Special thanks to interns',\n    sourceURL: '',\n  },\n\n  {\n    name: 'Iris flowers',\n    category: 'Convex hull, Parallel Coordinates',\n    url: './sample-datasets/Convex hull - Iris flowers.tsv',\n    delimiter: '\\t',\n    sourceName: 'R. Fisher',\n    sourceURL: 'https://en.wikipedia.org/wiki/Iris_flower_data_set',\n  },\n\n  {\n    name: 'Letter Frequency by Language',\n    category: 'Matrix plot (Heatmap)',\n    url: './sample-datasets/Matrix Plot - Letters frequencies by language.tsv',\n    delimiter: '\\t',\n    sourceName: 'Wikipedia',\n    sourceURL: 'https://en.wikipedia.org/wiki/Letter_frequency',\n  },\n\n  {\n    name: 'FIFA players statistics',\n    category: 'Radar Chart',\n    url: './sample-datasets/Radar Chart - Fifa players.tsv',\n    delimiter: '\\t',\n    sourceName: 'K. Gadiya via Kaggle',\n    sourceURL: 'https://www.kaggle.com/karangadiya/fifa19',\n  },\n\n  {\n    name: 'Olympics Medals',\n    category: 'Streamgraph',\n    url: './sample-datasets/Streamgraph - Olympics Medals.tsv',\n    delimiter: '\\t',\n    sourceName: 'D. Agrawal via Kaggle',\n    sourceURL: 'https://www.kaggle.com/divyansh22/summer-olympics-medals',\n  },\n\n  {\n    name: 'Weather in New York, 2012-2015',\n    category: 'Violin plot, Boxplot',\n    url: './sample-datasets/Violin plot - Weather in New York.tsv',\n    delimiter: '\\t',\n    sourceName: 'NOAA via Vega Dataset',\n    sourceURL:\n      'https://github.com/vega/vega-datasets/blob/master/SOURCES.md#seattle-weathercsv',\n  },\n\n  {\n    name: 'Netflix Original Series 2013/2017',\n    category: 'Bar chart',\n    url: './sample-datasets/Bar chart - Netflix Original Series.tsv',\n    delimiter: '\\t',\n    sourceName: 'M. Schroyer via Data World',\n    sourceURL: 'https://data.world/mattschroyer/netflix-original-series',\n  },\n\n  {\n    name: 'Premier League and Serie A points',\n    category: 'Slope chart',\n    url: './sample-datasets/Slope graph - Premier SerieA ranking.tsv',\n    delimiter: '\\t',\n    sourceName: 'Wikipedia',\n    sourceURL: 'https://en.wikipedia.org/wiki/2019%E2%80%9320_Premier_League',\n  },\n\n  // {\n  //   name: '',\n  //   category: '',\n  //   url: './sample-datasets/',\n  //   delimiter: '\\t',\n  //   sourceName: '',\n  //   sourceURL: '',\n  // },\n]\nexport default function DataSamples({ onSampleReady, setLoadingError }) {\n  const select = async (sample) => {\n    const { delimiter, url } = sample\n    let response\n    try {\n      response = await fetch(url)\n    } catch (e) {\n      setLoadingError('Loading error. ' + e.message)\n      return\n    }\n    const text = await response.text()\n    onSampleReady(text, delimiter)\n    setLoadingError(null)\n  }\n  return (\n    <Row>\n      {samplesList\n        // sort by category name\n        .sort((a, b) => a.name.localeCompare(b.name))\n        .map((d, i) => {\n          return (\n            <Col xs={6} lg={4} xl={3} key={i} style={{ marginBottom: 15 }}>\n              <Card className=\"cursor-pointer h-100\">\n                <Card.Body\n                  onClick={() => {\n                    select(d)\n                  }}\n                  className=\"d-flex flex-column\"\n                >\n                  <Card.Title className=\"\">\n                    <h2 className=\"\">{d.name}</h2>\n                    <h4 className=\"m-0\">{d.category}</h4>\n                  </Card.Title>\n                </Card.Body>\n                <a\n                  href={d.sourceURL}\n                  className={[styles['dataset-source']].join(' ')}\n                >\n                  Source: {d.sourceName}\n                </a>\n              </Card>\n            </Col>\n          )\n        })}\n    </Row>\n  )\n}\n","import React, { useCallback, useState } from 'react'\nimport { map } from 'lodash'\nimport './JsonViewer.scss'\n\nconst JsonViewerRecursive = ({\n  contextName,\n  nestingLevel,\n  context,\n  selectFilter,\n  onSelect,\n  path\n}) => {\n  const isSelectable = selectFilter(context)\n  const contextType = typeof context\n  const [mouseOver, setMouseOver] = useState(false)\n\n  const classes = [\n    'json-nested',\n    isSelectable ? 'selectable' : null,\n    mouseOver ? 'hover' : null,\n  ]\n    .filter((i) => i !== null)\n    .join(' ')\n\n  const handleSelect = useCallback(\n    (e) => {\n      if (isSelectable) {\n        e.stopPropagation()\n        e.preventDefault()\n        if (onSelect) onSelect(context, path.join(\".\"))\n      }\n    },\n    [context, isSelectable, onSelect, path]\n  )\n\n  const handleMouseOver = useCallback(\n    (e) => {\n      if (isSelectable) {\n        e.stopPropagation()\n        e.preventDefault()\n        setMouseOver(true)\n      }\n    },\n    [isSelectable]\n  )\n\n  const handleMouseOut = useCallback(\n    (e) => {\n      if (isSelectable) {\n        e.stopPropagation()\n        e.preventDefault()\n        setMouseOver(false)\n      }\n    },\n    [isSelectable]\n  )\n\n  if (contextType === 'object' && contextType !== null) {\n    return (\n      <div\n        className={classes}\n        onClick={handleSelect}\n        onMouseOver={handleMouseOver}\n        onMouseOut={handleMouseOut}\n      >\n        {contextName && (\n          <>\n            <span className=\"property-name\">{contextName}</span>\n            <span className=\"colon\">{': '}</span>\n          </>\n        )}\n        {!Array.isArray(context) && (\n          <span className=\"curly-bracket open-bracket\">{'{'}</span>\n        )}\n        {Array.isArray(context) && (\n          <span className=\"square-bracket open-bracket\">{'['}</span>\n        )}\n        {map(context, (value, property) => (\n          <JsonViewerRecursive\n            key={property}\n            contextName={Array.isArray(context) ? null : property}\n            nestingLevel={nestingLevel + 1}\n            context={value}\n            selectFilter={selectFilter}\n            onSelect={onSelect}\n            path={[...path, property]}\n          />\n        ))}\n        {!Array.isArray(context) && (\n          <span className=\"curly-bracket close-bracket\">{'}'}</span>\n        )}\n        {Array.isArray(context) && (\n          <span className=\"square-bracket close-bracket\">{']'}</span>\n        )}\n      </div>\n    )\n  } else {\n    return (\n      <div\n        className={classes}\n        onClick={handleSelect}\n        onMouseOver={handleMouseOver}\n        onMouseOut={handleMouseOut}\n      >\n        {contextName && (\n          <>\n            <span className=\"property-name\">{contextName}</span>\n            <span className=\"colon\">{': '}</span>\n          </>\n        )}\n        {context === null && <span className=\"scalar-value\">null</span>}\n        {context !== null && (\n          <>\n            {(contextType === 'bigint' || contextType === 'number') && (\n              <span className=\"scalar-value scalar-value-numeric\">\n                {context.toString()}\n              </span>\n            )}\n            {contextType === 'string' && (\n              <span className=\"scalar-value scalar-value-string\">\n                \"{context.toString()}\"\n              </span>\n            )}\n            {contextType === 'boolean' && (\n              <span className=\"scalar-value scalar-value-bool\">\n                \"{context ? 'true' : 'false'}\"\n              </span>\n            )}\n            {contextType === 'undefined' && (\n              <span className=\"scalar-value scalar-value-undefined\">\n                undefined\n              </span>\n            )}\n          </>\n        )}\n      </div>\n    )\n  }\n}\n\nconst JsonViewer = ({ context, selectFilter, onSelect }) => {\n  return (\n    <pre className=\"json-viewer\">\n      <JsonViewerRecursive\n        contextName={null}\n        nestingLevel={0}\n        context={context}\n        selectFilter={selectFilter}\n        onSelect={onSelect}\n        path={[]}\n      />\n    </pre>\n  )\n}\n\nexport default JsonViewer\n","import React, { useCallback } from 'react'\nimport { Dropdown } from 'react-bootstrap'\nimport { separatorsLabels } from '../../constants'\n\nimport styles from './ParsingOptions.module.scss'\n\nexport default function SeparatorSelector({\n  title,\n  value,\n  onChange,\n  ...props\n}) {\n  const inputValue = value\n    .replace(/\\r/g, '\\\\r')\n    .replace(/\\n/g, '\\\\n')\n    .replace(/\\t/g, '\\\\t')\n\n  const handleChange = useCallback(\n    (separator) => {\n      if (onChange) {\n        const nextValue = separator\n          .replace(/\\\\r/g, '\\r')\n          .replace(/\\\\n/g, '\\n')\n          .replace(/\\\\t/g, '\\t')\n        onChange(nextValue)\n      }\n    },\n    [onChange]\n  )\n\n  const formatValue = (value)=>{\n    return (\n      <>\n        <span className={['small',styles['separator-preview']].join(' ')}>{value}</span> <span>{separatorsLabels[value]}</span>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <div className=\"option\">\n        {title}\n        <Dropdown className=\"d-inline-block raw-dropdown\">\n          <Dropdown.Toggle variant=\"white\" className=\"d-flex justify-content-start align-items-center text-truncate\">\n            { formatValue(inputValue) }\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            {Object.keys(separatorsLabels).map(key=>{\n              return <Dropdown.Item key={separatorsLabels[key]} onSelect={() => handleChange(key)}>\n                { formatValue(key) }\n              </Dropdown.Item>\n            })}\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n    </>\n  )\n}\n","import React, { useCallback } from 'react'\n\nexport default function ThousandsSeparatorSelector({\n  title,\n  value,\n  onChange,\n  ...props\n}) {\n  const inputValue = value\n  // // Remove?\n  // .replace(/\\r/g, \"\\\\r\")\n  // .replace(/\\n/g, \"\\\\n\")\n  // .replace(/\\t/g, \"\\\\t\")\n\n  const handleChange = useCallback(\n    (e) => {\n      if (onChange) {\n        const nextValue = e.target.value\n        // // Remove?\n        // .replace(/\\\\r/g, \"\\r\")\n        // .replace(/\\\\n/g, \"\\n\")\n        // .replace(/\\\\t/g, \"\\t\")\n\n        onChange(nextValue)\n      }\n    },\n    [onChange]\n  )\n\n  return (\n    <div className=\"option\">\n      {title}\n      <input\n        type=\"text\"\n        className=\"form-control text-field d-inline-block\"\n        value={inputValue}\n        onChange={handleChange}\n        {...props}\n      />\n    </div>\n  )\n}\n","import React, { useCallback } from 'react'\n\nexport default function DecimalsSeparatorSelector({\n  title,\n  value,\n  onChange,\n  ...props\n}) {\n  const inputValue = value\n\n  const handleChange = useCallback(\n    (e) => {\n      if (onChange) {\n        const nextValue = e.target.value\n        onChange(nextValue)\n      }\n    },\n    [onChange]\n  )\n\n  return (\n    <div className=\"option\">\n      {title}\n      <input\n        type=\"text\"\n        className=\"form-control text-field d-inline-block\"\n        value={inputValue}\n        onChange={handleChange}\n        {...props}\n      />\n    </div>\n  )\n}\n","import React, { useCallback } from 'react'\nimport { Dropdown } from 'react-bootstrap'\nimport { localeList } from '../../constants'\n\nexport default function DateLocaleSelector({\n  title,\n  value,\n  onChange,\n  ...props\n}) {\n  const handleChange = useCallback(\n    (locale) => {\n      if (onChange) {\n        const nextLocale = locale\n        onChange(nextLocale)\n      }\n    },\n    [onChange]\n  )\n\n  return (\n    <div className=\"option\">\n      {title}\n      <Dropdown className=\"d-inline-block raw-dropdown\">\n        <Dropdown.Toggle variant=\"white\" className=\"\">\n          {value}\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          <Dropdown.Header>\n            <span>\n              from{' '}\n              <a\n                href=\"https://github.com/d3/d3-time-format/tree/master/locale\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                d3-time-format\n              </a>\n            </span>\n          </Dropdown.Header>\n          {Object.keys(localeList).map((d) => {\n            return (\n              <Dropdown.Item key={d} onSelect={() => handleChange(d)}>\n                {d}\n              </Dropdown.Item>\n            )\n          })}\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  )\n}\n","import React, { useCallback } from 'react'\nimport { Dropdown } from 'react-bootstrap'\n\nexport default function StackSelector({\n  title,\n  value,\n  list,\n  onChange,\n  ...props\n}) {\n  const handleChange = useCallback(\n    (nextDimension) => {\n      if (onChange) {\n        onChange(nextDimension)\n      }\n    },\n    [onChange]\n  )\n\n  return (\n    <div className=\"option\">\n      {title}\n      <Dropdown className=\"d-inline-block raw-dropdown\">\n        <Dropdown.Toggle\n          variant=\"white\"\n          className=\"truncate-160px\"\n          disabled={list.length === 0}\n        >\n          {value ? value : 'Column'}\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {value && (\n            <Dropdown.Item onSelect={() => handleChange(null)}>\n              {'Do not stack'}\n            </Dropdown.Item>\n          )}\n          {Object.keys(list).map((d) => {\n            return (\n              <Dropdown.Item key={d} onSelect={() => handleChange(d)}>\n                {d}\n              </Dropdown.Item>\n            )\n          })}\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport classNames from 'classnames'\nimport S from './UrlFetch.module.scss'\n\nexport async function fetchData(source) {\n  const response = await fetch(source.url)\n  const text = await response.text()\n  return text\n}\n\nexport default function UrlFetch({ userInput, setUserInput, setLoadingError }) {\n  const [url, setUrl] = useState('')\n\n  const fetchUrl = async (url) => {\n    const source = { type: 'url', url }\n    let data\n    try {\n      data = await fetchData(source)\n      setUserInput(data, source)\n      setLoadingError(null)\n    } catch (e) {\n      setLoadingError(\"Loading error. \"+e.message)\n    }\n  }\n  return (\n    <input\n      className={classNames('w-100', S['url-input'])}\n      value={url}\n      onChange={(e) => {\n        setUrl(e.target.value)\n        fetchUrl(e.target.value)\n      }}\n    />\n  )\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react'\nimport classNames from 'classnames'\nimport S from './SparqlFetch.module.scss'\nimport { html, render } from 'lit-html'\nimport SimpleClient from 'sparql-http-client/SimpleClient'\nimport { Generator } from 'sparqljs'\nimport '@rdfjs-elements/sparql-editor/sparql-editor.js'\nimport { SparqlMarker } from '../../../hooks/useDataLoaderUtils/parser'\n\nconst DEFAULT_PREFIXES = {\n  wd: 'http://www.wikidata.org/entity/',\n  wds: 'http://www.wikidata.org/entity/statement/',\n  wdv: 'http://www.wikidata.org/value/',\n  wdt: 'http://www.wikidata.org/prop/direct/',\n  wikibase: 'http://wikiba.se/ontology#',\n  p: 'http://www.wikidata.org/prop/',\n  ps: 'http://www.wikidata.org/prop/statement/',\n  pq: 'http://www.wikidata.org/prop/qualifier/',\n  rdfs: 'http://www.w3.org/2000/01/rdf-schema#',\n  bd: 'http://www.bigdata.com/rdf#',\n  wdref: 'http://www.wikidata.org/reference/',\n  psv: 'http://www.wikidata.org/prop/statement/value/',\n  psn: 'http://www.wikidata.org/prop/statement/value-normalized/',\n  pqv: 'http://www.wikidata.org/prop/qualifier/value/',\n  pqn: 'http://www.wikidata.org/prop/qualifier/value-normalized/',\n  pr: 'http://www.wikidata.org/prop/reference/',\n  prv: 'http://www.wikidata.org/prop/reference/value/',\n  prn: 'http://www.wikidata.org/prop/reference/value-normalized/',\n  wdno: 'http://www.wikidata.org/prop/novalue/',\n  wdata: 'http://www.wikidata.org/wiki/Special:EntityData/',\n  schema: 'http://schema.org/',\n  rdf: 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n  owl: 'http://www.w3.org/2002/07/owl#',\n  skos: 'http://www.w3.org/2004/02/skos/core#',\n  xsd: 'http://www.w3.org/2001/XMLSchema#',\n  prov: 'http://www.w3.org/ns/prov#',\n  bds: 'http://www.bigdata.com/rdf/search#',\n  gas: 'http://www.bigdata.com/rdf/gas#',\n  hint: 'http://www.bigdata.com/queryHints#',\n}\n\nexport async function fetchData(source) {\n  const sparqlGenerator = new Generator()\n  const client = new SimpleClient({\n    endpointUrl: source.url,\n  })\n  const response = await client.query.select(\n    sparqlGenerator.stringify(source.query)\n  )\n  const results = await response.json()\n  const rows = bindingsToJson(results.head.vars, results.results.bindings)\n  rows[SparqlMarker] = true\n  return rows\n}\n\nexport default function SparqlFetch({\n  userInput,\n  setUserInput,\n  setLoadingError,\n}) {\n  const [url, setUrl] = useState('https://query.wikidata.org/sparql')\n  const [parsedQuery, setParsedQuery] = useState(null)\n\n  const editorDomRef = useRef()\n\n  const onQueryParsed = useCallback((evt) => {\n    const { query } = evt.detail\n    if (query.queryType === 'SELECT') {\n      setParsedQuery(query)\n    } else {\n      setParsedQuery(null)\n    }\n  }, [])\n\n  const onParserFailure = useCallback(() => {\n    console.log('parser failed')\n    setParsedQuery(null)\n  }, [])\n\n  const onSubmit = useCallback(() => {\n    const source = {\n      type: 'sparql',\n      url,\n      query: parsedQuery,\n    }\n    fetchData(source)\n      .then((result) => {\n        setUserInput(result, {\n          type: 'sparql',\n          url,\n          query: parsedQuery,\n        })\n      })\n      .catch((err) => {\n        setLoadingError(\n          'It was not possible to execute the query on the given endpoint'\n        )\n      })\n  }, [parsedQuery, setLoadingError, setUserInput, url])\n\n  useEffect(() => {\n    const node = editorDomRef.current\n    render(\n      html`<sparql-editor\n        auto-parse\n        customPrefixes=${JSON.stringify(DEFAULT_PREFIXES)}\n        @parsed=${onQueryParsed}\n        @parsing-failed=${onParserFailure}\n      ></sparql-editor>`,\n      node\n    )\n  }, [onQueryParsed, onParserFailure])\n\n  return (\n    <>\n      <div className={classNames(S['base-iri-input-here'])}>\n        <span>Write your base IRI here</span>\n      </div>\n      <input\n        className={classNames('w-100', S['url-input'])}\n        value={url}\n        onChange={(e) => {\n          setUrl(e.target.value)\n        }}\n      />\n      <div className={classNames(S['query-input-here'])}>\n        <span>Write your query here</span>\n      </div>\n      <div ref={editorDomRef} />\n      <div className=\"text-right\">\n        <button\n          className=\"btn btn-sm btn-success mt-3\"\n          disabled={!parsedQuery || !url}\n          onClick={onSubmit}\n        >\n          Run query\n        </button>\n      </div>\n    </>\n  )\n}\n\nfunction bindingsToJson(varNames, bindings) {\n  const result = []\n  for (const binding of bindings) {\n    const row = {}\n    for (const variable of varNames) {\n      const term = binding[variable]\n      if (!term) {\n        row[variable] = ''\n      } else {\n        row[variable] = term.value\n      }\n    }\n    result.push(row)\n  }\n  return result\n}\n","import React from 'react'\nimport { Row, Col, Button } from 'react-bootstrap'\nimport SeparatorSelector from './SeparatorSelector'\nimport ThousandsSeparatorSelector from './ThousandsSeparatorSelector'\nimport DecimalsSeparatorSelector from './DecimalsSeparatorSelector'\nimport DateLocaleSelector from './DateLocaleSelector'\nimport StackSelector from './StackSelector'\n\nimport styles from './ParsingOptions.module.scss'\nimport { BsArrowRepeat } from 'react-icons/bs'\nimport { get } from 'lodash'\nimport { fetchData as fetchDataFromUrl } from '../DataLoader/loaders/UrlFetch'\nimport { fetchData as fetchDataFromSparql } from '../DataLoader/loaders/SparqlFetch'\n\nconst dataRefreshWorkers = {\n  \"url\": fetchDataFromUrl,\n  \"sparql\": fetchDataFromSparql\n}\n\nconst dataRefreshCaptions = {\n  \"url\": \"Refresh data from url\",\n  \"sparql\": \"Refresh data from query\"\n}\n\nexport default function ParsingOptions(props) {\n  const refreshData = async () => {\n    const dataRefreshImpl = dataRefreshWorkers[get(props.dataSource, \"type\", \"\")]\n    const data = await dataRefreshImpl(props.dataSource)\n    props.onDataRefreshed(data)\n  }\n\n  return (\n    <Row>\n      <Col className={styles.parsingOptions}>\n        <b>DATA PARSING OPTIONS</b>\n\n        {props.userDataType === 'csv' && (\n          <SeparatorSelector\n            title=\"Column separator\"\n            value={props.separator}\n            onChange={(nextSeparator) => props.setSeparator(nextSeparator)}\n          />\n        )}\n        <ThousandsSeparatorSelector\n          title=\"Thousands separator\"\n          value={props.thousandsSeparator}\n          onChange={(nextSeparator) =>\n            props.setThousandsSeparator(nextSeparator)\n          }\n        />\n        <DecimalsSeparatorSelector\n          title=\"Decimals separator\"\n          value={props.decimalsSeparator}\n          onChange={(nextSeparator) =>\n            props.setDecimalsSeparator(nextSeparator)\n          }\n        />\n\n        <DateLocaleSelector\n          title=\"Date Locale\"\n          value={props.locale}\n          onChange={(nextLocale) => props.setLocale(nextLocale)}\n        />\n\n        {get(dataRefreshWorkers, get(props.dataSource, 'type', ''), null) && (\n          <Button\n            color=\"primary\"\n            className={styles['refresh-button']}\n            onClick={() => refreshData()}\n          >\n            <BsArrowRepeat className=\"mr-2\" />\n            {get(dataRefreshCaptions, get(props.dataSource, 'type', ''), \"Refresh data\")}\n          </Button>\n        )}\n\n        <div className=\"divider mb-3 mt-0\" />\n\n        <b>DATA TRANSFORMATION</b>\n\n        <StackSelector\n          title=\"Stack on\"\n          value={props.stackDimension}\n          list={props.dimensions}\n          onChange={(nextStackDimension) =>\n            props.setStackDimension(nextStackDimension)\n          }\n        />\n      </Col>\n    </Row>\n  )\n}\n","import {\n  alluvialdiagram,\n  arcdiagram,\n  barchart,\n  barchartmultiset,\n  barchartstacked,\n  beeswarm,\n  boxplot,\n  bubblechart,\n  bumpchart,\n  circlepacking,\n  circularDendrogram,\n  contourPlot,\n  convexHull,\n  dendrogram,\n  ganttChart,\n  hexagonalBinning,\n  horizongraph,\n  linechart,\n  matrixplot,\n  parallelcoordinates,\n  piechart,\n  radarchart,\n  sankeydiagram,\n  slopechart,\n  streamgraph,\n  sunburst,\n  treemap,\n  violinplot,\n  voronoidiagram,\n} from '@rawgraphs/rawgraphs-charts'\n\n// New charts, not included into first release.\n// Comment at necessity.\nlet charts = [\n  alluvialdiagram,\n  arcdiagram,\n  barchart,\n  barchartmultiset,\n  barchartstacked,\n  beeswarm,\n  boxplot,\n  bubblechart,\n  bumpchart,\n  circlepacking,\n  circularDendrogram,\n  contourPlot,\n  convexHull,\n  dendrogram,\n  ganttChart,\n  hexagonalBinning,\n  horizongraph,\n  linechart,\n  matrixplot,\n  parallelcoordinates,\n  piechart,\n  radarchart,\n  sankeydiagram,\n  slopechart,\n  streamgraph,\n  sunburst,\n  treemap,\n  violinplot,\n  voronoidiagram,\n]\n\nexport default charts\n","import React, { useCallback } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { useDropzone } from 'react-dropzone'\nimport classNames from 'classnames'\nimport S from './LoadProject.module.scss'\nimport { deserializeProject } from '@rawgraphs/rawgraphs-core'\nimport charts from '../../../charts'\n\n\nexport default function LoadProject({ onProjectSelected, setLoadingError }) {\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      const reader = new FileReader()\n      reader.addEventListener('load', (e) => {\n        try {\n          const project = deserializeProject(e.target.result, charts)\n          setLoadingError(null)\n          onProjectSelected(project)\n        } catch (e) {\n          setLoadingError(e.message)\n        }\n      })\n      if (acceptedFiles.length) {\n        reader.readAsText(acceptedFiles[0])\n      }\n    },\n    [onProjectSelected, setLoadingError]\n  )\n  const {\n    getRootProps,\n    getInputProps,\n    isDragReject,\n    isDragAccept,\n  } = useDropzone({\n    onDrop,\n    accept: '.rawgraphs',\n    maxFiles: 1,\n  })\n  return (\n    <div\n      className={classNames(S.dropzone, {\n        [S.reject]: isDragReject,\n        [S.accept]: isDragAccept,\n      })}\n      {...getRootProps()}\n    >\n      <input {...getInputProps()} />\n      <span>Drag a file here or </span>\n      <Button className={S['browse-button']} color=\"primary\">\n        Browse\n      </Button>\n      <span>a file from your computer</span>\n      {isDragAccept && <p>All files will be accepted</p>}\n      {isDragReject && <p>Some files will be rejected</p>}\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function Paste({ userInput, setUserInput, setLoadingError }) {\n  return (\n    <textarea\n      value={userInput}\n      onChange={(e) => {\n        const str = e.target.value\n        setUserInput(str)\n        setLoadingError(null)\n      }}\n      style={{\n        backgroundColor: 'white',\n        border: '1px solid lightgrey',\n        borderRadius: 4,\n        width: '100%',\n        padding: '1rem',\n        minHeight: '250px',\n        height: '40vh',\n      }}\n    />\n  )\n}\n","import React, { useCallback } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { useDropzone } from 'react-dropzone'\nimport classNames from 'classnames'\nimport S from './UploadFile.module.scss'\n\nexport default function UploadFile({\n  setUserInput,\n  setLoadingError,\n}) {\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      const reader = new FileReader()\n      reader.addEventListener('load', (e) => {\n        setUserInput(e.target.result)\n        setLoadingError(null)\n      })\n      if (acceptedFiles.length) {\n        reader.readAsText(acceptedFiles[0])\n      }\n    },\n    [setLoadingError, setUserInput]\n  )\n  const {\n    getRootProps,\n    getInputProps,\n    isDragReject,\n    isDragAccept,\n  } = useDropzone({\n    onDrop,\n    accept:\n      'text/csv,text/plain,application/json,application/vnd.ms-excel,text/tsv,text/tab-separated-values',\n    maxFiles: 1,\n  })\n  return (\n    <div\n      className={classNames(S.dropzone, {\n        [S.reject]: isDragReject,\n        [S.accept]: isDragAccept,\n      })}\n      {...getRootProps()}\n    >\n      <input {...getInputProps()} />\n      <span>Drag a file here or </span>\n      <Button className={S['browse-button']} color=\"primary\">\n        Browse\n      </Button>\n      <span>a file from your computer</span>\n      {isDragAccept && <p>All files will be accepted</p>}\n      {isDragReject && <p>Some files will be rejected</p>}\n    </div>\n  )\n}\n","import React from 'react'\nimport styles from './DataLoader.module.scss'\n\nexport default function Loading() {\n  return (\n    <div className={styles['loading-component']}>\n      <div className={styles['bg-animated']}/>\n      <p>loading...</p>\n    </div>\n  )\n}","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n/**\n *\n * @param {string} type The warning type: success, secondary, warning, danger\n * @param {string} error The error message to be displayed\n */\nfunction WarningMessage({ variant = \"warning\", message = \"A default warning message.\"}) {\n  return (\n    <Alert variant={variant} className=\"my-2\">\n      {message}\n    </Alert>\n  )\n}\n\nexport default WarningMessage\n","import React, { useState } from 'react'\nimport { Modal, Button } from 'react-bootstrap'\n\nfunction DataMismatchModal({\n  replaceRequiresConfirmation,\n  commitDataReplace,\n  cancelDataReplace,\n}) {\n  const [showModal, setShowModal] = useState(true)\n\n  const handleClose = () => {\n    setShowModal(false)\n  }\n  return (\n    <Modal\n      className=\"raw-modal\"\n      show={showModal}\n      onHide={handleClose}\n      backdrop=\"static\"\n      keyboard={false}\n      // size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header>\n        <Modal.Title as=\"h5\">\n          Warning:{' '}\n          {replaceRequiresConfirmation === 'parse-error' && <>parsing error</>}\n          {replaceRequiresConfirmation.startsWith('missing-column:') && (\n            <>missing column</>\n          )}\n          {replaceRequiresConfirmation === 'type-mismatch' && (\n            <>data-type mismatch</>\n          )}\n        </Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        {replaceRequiresConfirmation === 'parse-error' && (\n          <>\n            <p>There was an error while parsing new data.</p>\n            <p>\n              You can load the new data and try to fix the error or return to\n              the data previously loaded.\n            </p>\n          </>\n        )}\n        {replaceRequiresConfirmation.startsWith('missing-column:') && (\n          <>\n            <p>\n              The data mapping of this project requires the dimension{' '}\n              <span className=\"font-weight-bold\">\n                {replaceRequiresConfirmation.split(':')[1]}\n              </span>\n              , that we can't find in the new data.\n            </p>\n            <p>\n              You can create a new data mapping with the new data or return to\n              the data previously loaded.\n            </p>\n          </>\n        )}\n        {replaceRequiresConfirmation === 'type-mismatch' && (\n          <>\n            <p>\n              The data-types previously set for this project can't be applied to\n              the new data.\n            </p>\n            <p>\n              You can use the new data and re-set data-types or return to the\n              data previously loaded.\n            </p>\n          </>\n        )}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n          variant=\"warning\"\n          onClick={() => {\n            commitDataReplace()\n          }}\n        >\n          Load new data\n        </Button>\n        <Button\n          variant=\"secondary\"\n          onClick={() => {\n            cancelDataReplace()\n          }}\n        >\n          Cancel\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default DataMismatchModal\n","import { get } from 'lodash'\nimport React, { useCallback, useState } from 'react'\nimport { Col, Row } from 'react-bootstrap'\nimport {\n  BsArrowCounterclockwise,\n  BsArrowRepeat,\n  BsClipboard,\n  BsCloud,\n  BsFolder,\n  BsGift,\n  BsSearch,\n  BsUpload,\n} from 'react-icons/bs'\nimport { DATA_LOADER_MODE } from '../../hooks/useDataLoader'\nimport DataGrid from '../DataGrid/DataGrid'\nimport DataSamples from '../DataSamples/DataSamples'\nimport JsonViewer from '../JsonViewer'\nimport ParsingOptions from '../ParsingOptions'\nimport styles from './DataLoader.module.scss'\nimport LoadProject from './loaders/LoadProject'\nimport Paste from './loaders/Paste'\nimport UploadFile from './loaders/UploadFile'\nimport UrlFetch from './loaders/UrlFetch'\nimport Loading from './loading'\nimport WarningMessage from '../WarningMessage'\nimport DataMismatchModal from './DataMismatchModal'\nimport SparqlFetch from './loaders/SparqlFetch'\n\nfunction DataLoader({\n  userInput,\n  setUserInput,\n  userData,\n  userDataType,\n  parseError,\n  unstackedColumns,\n  separator,\n  setSeparator,\n  thousandsSeparator,\n  setThousandsSeparator,\n  decimalsSeparator,\n  setDecimalsSeparator,\n  locale,\n  setLocale,\n  stackDimension,\n  dataSource,\n  data,\n  loading,\n  coerceTypes,\n  loadSample,\n  handleInlineEdit,\n  handleStackOperation,\n  setJsonData,\n  resetDataLoader,\n  dataLoaderMode,\n  startDataReplace,\n  cancelDataReplace,\n  commitDataReplace,\n  replaceRequiresConfirmation,\n  hydrateFromProject,\n}) {\n  const [loadingError, setLoadingError] = useState()\n  const options = [\n    {\n      id: 'paste',\n      name: 'Paste your data',\n      loader: (\n        <Paste\n          userInput={userInput}\n          setUserInput={(rawInput) => setUserInput(rawInput, { type: 'paste' })}\n          setLoadingError={setLoadingError}\n        />\n      ),\n      message:\n        'Copy and paste your data from other applications or websites. You can use tabular (TSV, CSV, DSV) or JSON data.',\n      icon: BsClipboard,\n      allowedForReplace: true,\n    },\n    {\n      id: 'upload',\n      name: 'Upload your data',\n      loader: (\n        <UploadFile\n          userInput={userInput}\n          setUserInput={(rawInput) => setUserInput(rawInput, { type: 'file' })}\n          setLoadingError={setLoadingError}\n        />\n      ),\n      message: 'You can load tabular (TSV, CSV, DSV) or JSON data.',\n      icon: BsUpload,\n      allowedForReplace: true,\n    },\n    {\n      id: 'samples',\n      name: 'Try our data samples',\n      message: '',\n      loader: (\n        <DataSamples\n          onSampleReady={loadSample}\n          setLoadingError={setLoadingError}\n        />\n      ),\n      icon: BsGift,\n      allowedForReplace: true,\n    },\n    {\n      id: 'sparql',\n      name: 'SPARQL query',\n      message: 'Load data with a SparQL query',\n      loader: (\n        <SparqlFetch\n          userInput={userInput}\n          setUserInput={(rawInput, source) => setUserInput(rawInput, source)}\n          setLoadingError={setLoadingError}\n        />\n      ),\n      icon: BsCloud,\n      disabled: false,\n      allowedForReplace: true,\n    },\n    {\n      id: 'url',\n      name: 'From URL',\n      message:\n        'Enter a web address (URL) pointing to the data (e.g. a public Dropbox file, a public API, ...). Please, be sure the server is CORS-enabled.',\n      loader: (\n        <UrlFetch\n          userInput={userInput}\n          setUserInput={(rawInput, source) => setUserInput(rawInput, source)}\n          setLoadingError={setLoadingError}\n        />\n      ),\n      icon: BsSearch,\n      disabled: false,\n      allowedForReplace: true,\n    },\n    {\n      id: 'project',\n      name: 'Open your project',\n      message: 'Load a .rawgraphs project.',\n      loader: (\n        <LoadProject\n          onProjectSelected={hydrateFromProject}\n          setLoadingError={setLoadingError}\n        />\n      ),\n      icon: BsFolder,\n      allowedForReplace: false,\n    },\n  ]\n  const [optionIndex, setOptionIndex] = useState(0)\n  const selectedOption = options[optionIndex]\n\n  let mainContent\n  if (userData && data) {\n    mainContent = (\n      <DataGrid\n        userDataset={userData}\n        dataset={data.dataset}\n        errors={data.errors}\n        dataTypes={data.dataTypes}\n        coerceTypes={coerceTypes}\n        onDataUpdate={handleInlineEdit}\n      />\n    )\n  } else if (userDataType === 'json' && userData === null) {\n    mainContent = (\n      <JsonViewer\n        context={JSON.parse(userInput)}\n        selectFilter={(ctx) => Array.isArray(ctx)}\n        onSelect={(ctx, path) => {\n          setJsonData(ctx, path)\n        }}\n      />\n    )\n  } else if (loading && !data) {\n    mainContent = <Loading />\n  } else {\n    mainContent = (\n      <>\n        {selectedOption.loader}\n        <p className=\"mt-3\">\n          {selectedOption.message}\n          {/*<a\n            href=\"https://rawgraphs.io/learning\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Check out our guides\n          </a>*/}\n        </p>\n      </>\n    )\n  }\n\n  // #TODO: memoize/move to component?\n  function parsingErrors(data) {\n    const errors = get(data, 'errors', [])\n    const successRows = data.dataset.length - errors.length\n    const row = errors[0].row + 1\n    const column = Object.keys(errors[0].error)[0]\n    return (\n      <span>\n        Ops, please check <span className=\"font-weight-bold\">row {row}</span> at\n        column <span className=\"font-weight-bold\">{column}</span>.{' '}\n        {errors.length === 2 && (\n          <>\n            {' '}\n            There's another issue at row{' '}\n            <span className=\"font-weight-bold\">{errors[1].row + 1}</span>.{' '}\n          </>\n        )}\n        {errors.length > 2 && (\n          <>\n            {' '}\n            There are issues in{' '}\n            <span className=\"font-weight-bold\">{errors.length - 1}</span> more\n            rows.{' '}\n          </>\n        )}\n        {successRows > 0 && (\n          <>\n            The remaining{' '}\n            <span className=\"font-weight-bold\">\n              {successRows} row{successRows > 1 && <>s</>}\n            </span>{' '}\n            look{successRows === 1 && <>s</>} fine.\n          </>\n        )}\n      </span>\n    )\n  }\n\n  const reloadRAW = useCallback(() => {\n    window.location.replace(window.location.pathname)\n  }, [])\n\n  return (\n    <>\n      <Row>\n        {!userData && (\n          <Col\n            xs={3}\n            lg={2}\n            className=\"d-flex flex-column justify-content-start pl-3 pr-0 options\"\n          >\n            {options\n              .filter((opt) => {\n                return (\n                  dataLoaderMode !== DATA_LOADER_MODE.REPLACE ||\n                  opt.allowedForReplace\n                )\n              })\n              .map((d, i) => {\n                const classnames = [\n                  'w-100',\n                  'd-flex',\n                  'align-items-center',\n                  'user-select-none',\n                  'cursor-pointer',\n                  styles['loading-option'],\n                  d.disabled ? styles['disabled'] : null,\n                  d.id === selectedOption.id && !userDataType\n                    ? styles.active\n                    : null,\n                  userDataType ? styles.disabled : null,\n                ]\n                  .filter((c) => c !== null)\n                  .join(' ')\n                return (\n                  <div\n                    key={d.id}\n                    className={classnames}\n                    onClick={() => setOptionIndex(i)}\n                  >\n                    <d.icon className=\"w-25\" />\n                    <h4 className=\"m-0 d-inline-block\">{d.name}</h4>\n                  </div>\n                )\n              })}\n\n            {dataLoaderMode === DATA_LOADER_MODE.REPLACE && (\n              <>\n                <div className=\"divider mb-3 mt-0\" />\n                <div\n                  className={`w-100 mb-2 d-flex justify-content-center align-items-center ${styles['start-over']} user-select-none cursor-pointer`}\n                  onClick={reloadRAW}\n                >\n                  <BsArrowRepeat className=\"mr-2\" />\n                  <h4 className=\"m-0 d-inline-block\">{'Reset'}</h4>\n                </div>\n\n                <div\n                  className={`w-100 d-flex justify-content-center align-items-center ${styles['start-over']} ${styles['cancel']} user-select-none cursor-pointer mb-3`}\n                  onClick={() => {\n                    cancelDataReplace()\n                  }}\n                >\n                  <h4 className=\"m-0 d-inline-block\">{'Cancel'}</h4>\n                </div>\n              </>\n            )}\n          </Col>\n        )}\n        {userData && (\n          <Col\n            xs={3}\n            lg={2}\n            className=\"d-flex flex-column justify-content-start pl-3 pr-0 options\"\n          >\n            <ParsingOptions\n              locale={locale}\n              setLocale={setLocale}\n              separator={separator}\n              setSeparator={setSeparator}\n              thousandsSeparator={thousandsSeparator}\n              setThousandsSeparator={setThousandsSeparator}\n              decimalsSeparator={decimalsSeparator}\n              setDecimalsSeparator={setDecimalsSeparator}\n              dimensions={data ? unstackedColumns || data.dataTypes : []}\n              stackDimension={stackDimension}\n              setStackDimension={handleStackOperation}\n              userDataType={userDataType}\n              dataSource={dataSource}\n              onDataRefreshed={(rawInput) => setUserInput(rawInput, dataSource)}\n            />\n\n            <div className=\"divider mb-3 mt-0\" />\n\n            <div\n              className={`w-100 mb-2 d-flex justify-content-center align-items-center ${styles['start-over']} user-select-none cursor-pointer`}\n              onClick={reloadRAW}\n            >\n              <BsArrowRepeat className=\"mr-2\" />\n              <h4 className=\"m-0 d-inline-block\">{'Reset'}</h4>\n            </div>\n\n            <div\n              className={`w-100 d-flex justify-content-center align-items-center ${styles['start-over']} user-select-none cursor-pointer`}\n              onClick={() => {\n                setOptionIndex(0)\n                startDataReplace()\n              }}\n            >\n              <BsArrowCounterclockwise className=\"mr-2\" />\n              <h4 className=\"m-0 d-inline-block\">{'Change data'}</h4>\n            </div>\n          </Col>\n        )}\n        <Col>\n          <Row className=\"h-100\">\n            <Col className=\"h-100\">\n              {mainContent}\n\n              {data && !parseError && get(data, 'errors', []).length === 0 && (\n                <WarningMessage\n                  variant=\"success\"\n                  message={\n                    <span>\n                      <span className=\"font-weight-bold\">\n                        {data.dataset.length} rows\n                      </span>{' '}\n                      (\n                      {data.dataset.length * Object.keys(data.dataTypes).length}{' '}\n                      cells) have been successfully parsed, now you can choose a\n                      chart!\n                    </span>\n                  }\n                />\n              )}\n\n              {parseError && (\n                <WarningMessage variant=\"danger\" message={parseError} />\n              )}\n\n              {get(data, 'errors', []).length > 0 && (\n                <WarningMessage\n                  variant=\"warning\"\n                  message={parsingErrors(data)}\n                />\n              )}\n\n              {loadingError && (\n                <WarningMessage variant=\"danger\" message={loadingError} />\n              )}\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n      {replaceRequiresConfirmation && (\n        <DataMismatchModal\n          replaceRequiresConfirmation={replaceRequiresConfirmation}\n          commitDataReplace={commitDataReplace}\n          cancelDataReplace={cancelDataReplace}\n        />\n      )}\n    </>\n  )\n}\n\nexport default React.memo(DataLoader)\n","import React, { useState, useMemo, useCallback } from 'react'\nimport classNames from 'classnames'\nimport { Row, Col, Card, Dropdown } from 'react-bootstrap'\nimport { BsLink } from 'react-icons/bs'\nimport uniq from 'lodash/uniq'\nimport styles from './ChartSelector.module.scss'\n\nfunction filterCharts(charts, filter) {\n  return filter === 'All charts'\n    ? charts\n    : charts.filter((d) => d.metadata.categories.indexOf(filter) !== -1)\n}\n\nfunction ChartSelector({ availableCharts, currentChart, setCurrentChart }) {\n  const [filter, setFilter] = useState('All charts')\n\n  const charts = useMemo(() => {\n    return filterCharts(availableCharts, filter)\n  }, [availableCharts, filter])\n\n  const handleFilterChange = useCallback(\n    (nextFilter) => {\n      setFilter(nextFilter)\n      const nextCharts = filterCharts(availableCharts, nextFilter)\n      if (nextCharts.indexOf(currentChart) === -1) {\n        setCurrentChart(nextCharts[0])\n      }\n    },\n    [availableCharts, currentChart, setCurrentChart]\n  )\n\n  return (\n    <>\n      <Row>\n        <Col className=\"text-right\">\n          Show\n          <Dropdown className=\"d-inline-block ml-2 raw-dropdown\">\n            <Dropdown.Toggle variant=\"white\" className=\"pr-5\">\n              {filter.charAt(0).toUpperCase() + filter.slice(1)}\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item\n                key={'All charts'}\n                onClick={() => handleFilterChange('All charts')}\n              >\n                All charts\n              </Dropdown.Item>\n              {uniq(\n                availableCharts.map((d) => d.metadata.categories).flat()\n              ).map((d) => {\n                return (\n                  <Dropdown.Item key={d} onClick={() => handleFilterChange(d)}>\n                    {d.charAt(0).toUpperCase() + d.slice(1)}\n                  </Dropdown.Item>\n                )\n              })}\n            </Dropdown.Menu>\n          </Dropdown>\n        </Col>\n      </Row>\n      <Row>\n        <Col xs={3} className=\"pt-3\">\n          {currentChart && (\n            <Card className={styles.currentChart}>\n              <Card.Img variant=\"top\" src={currentChart.metadata.thumbnail} />\n              <Card.Body>\n                <Card.Title className=\"m-0\">\n                  <h2 className=\"m-0\">{currentChart.metadata.name}</h2>\n                </Card.Title>\n                <Card.Subtitle className=\"m-0\">\n                  <h4 className=\"mb-2\">{currentChart.metadata.category}</h4>\n                </Card.Subtitle>\n                <Card.Text>{currentChart.metadata.description}</Card.Text>\n                <Card.Link\n                  className={classNames({\n                    [styles.disabled]: !currentChart.metadata.code,\n                    underlined: true,\n                  })}\n                  href={currentChart.metadata.code}\n                  target=\"_blank\"\n                >\n                  <BsLink color=\"black\" /> Code\n                </Card.Link>\n                <Card.Link\n                  className={classNames({\n                    [styles.disabled]: !currentChart.metadata.tutorial,\n                    underlined: true,\n                  })}\n                  href={currentChart.metadata.tutorial}\n                  target=\"_blank\"\n                >\n                  <BsLink color=\"black\" /> Tutorial\n                </Card.Link>\n              </Card.Body>\n            </Card>\n          )}\n        </Col>\n        <Col>\n          <Row>\n            {charts.map((d, i) => {\n              return (\n                <Col xs={4} key={'chart-' + i} className={`p-3`}>\n                  <Card\n                    onClick={() => {\n                      setCurrentChart(d)\n                    }}\n                    className={`flex-row h-100 cursor-pointer ${\n                      d === currentChart ? 'active' : ''\n                    }`}\n                  >\n                    <div\n                      className={`h-100 w-25 ${styles.thumbnail}`}\n                      style={{ backgroundImage: `url(\"${d.metadata.icon}\")` }}\n                    ></div>\n                    <Card.Body className=\"w-75 px-2 py-3\">\n                      <Card.Title className=\"m-0\">\n                        <h2 className=\"m-0\" style={{ whiteSpace: 'nowrap' }}>\n                          {d.metadata.name}\n                        </h2>\n                      </Card.Title>\n                      <Card.Subtitle className=\"m-0\">\n                        <h4 className=\"m-0\">\n                          {d.metadata.categories\n                            .join(', ')\n                            .charAt(0)\n                            .toUpperCase() +\n                            d.metadata.categories.join(', ').slice(1)}\n                        </h4>\n                      </Card.Subtitle>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              )\n            })}\n          </Row>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default React.memo(ChartSelector)\n","import React from 'react'\nimport { dataTypeIcons } from '../../constants'\nimport { getTypeName } from '@rawgraphs/rawgraphs-core'\n\nimport { useDrag } from 'react-dnd'\n\nimport styles from './DataMapping.module.scss'\n\nconst ColumnCard = ({\n  dimensionName,\n  dimensionType,\n  commitLocalMapping,\n  rollbackLocalMapping,\n}) => {\n  const [{ isDragging }, drag] = useDrag({\n    item: { id: dimensionName, type: 'column' },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n    end: (dropResult, monitor) => {\n      const didDrop = monitor.didDrop()\n      if (didDrop) {\n        commitLocalMapping()\n      } else {\n        rollbackLocalMapping()\n      }\n      // console.log('DID DROP', didDrop)\n    },\n  })\n\n  const dimType = getTypeName(dimensionType)\n  const DataTypeIcon = dataTypeIcons[dimType]\n\n  return (\n    <div\n      ref={drag}\n      className={`column-card ${styles['column-card']} ${\n        isDragging ? 'is-dragging' : ''\n      }`}\n    >\n      <DataTypeIcon className={styles['data-type-icon']} />\n      <span className={styles['column-title']}>{dimensionName}</span>\n    </div>\n  )\n}\n\nexport default ColumnCard\n","import React from 'react'\nimport { Tooltip, OverlayTrigger } from 'react-bootstrap'\nimport { dataTypeIcons } from '../../constants'\nimport styles from './DataMapping.module.scss'\n\nfunction DataTypeIcon({ type }) {\n  const DataTypeIcon = dataTypeIcons[type]\n  return (\n    <span>\n      <OverlayTrigger\n        key=\"top\"\n        placement=\"top\"\n        overlay={\n          <Tooltip id={`tooltip-top`}>\n            Accepts {type}s\n          </Tooltip>\n        }\n      >\n        <DataTypeIcon className={styles['accepted-type-icon']} />\n      </OverlayTrigger>\n    </span>\n  )\n}\n\nexport default DataTypeIcon\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M8 0a1 1 0 0 1 1 1v5.268l4.562-2.634a1 1 0 1 1 1 1.732L10 8l4.562 2.634a1 1 0 1 1-1 1.732L9 9.732V15a1 1 0 1 1-2 0V9.732l-4.562 2.634a1 1 0 1 1-1-1.732L6 8 1.438 5.366a1 1 0 0 1 1-1.732L7 6.268V1a1 1 0 0 1 1-1z\"\n});\n\nvar SvgAsterisk = function SvgAsterisk(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    fill: \"currentColor\",\n    className: \"bi bi-asterisk\",\n    viewBox: \"0 0 16 16\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgAsterisk, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/asterisk.b07fc856.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport { ReactComponent as Asterisk } from './asterisk.svg'\nimport { Tooltip, OverlayTrigger } from 'react-bootstrap'\n\nfunction RequiredIcon() {\n  return (\n    <OverlayTrigger\n      key=\"top\"\n      placement=\"top\"\n      overlay={<Tooltip id={`tooltip-top`}>Mandatory</Tooltip>}\n    >\n      <Asterisk width=\"1rem\" height=\"1rem\" style={{marginRight:\"2px\"}} />\n    </OverlayTrigger>\n  )\n}\n\nexport default RequiredIcon\n","import React, { useRef } from 'react'\nimport { Dropdown } from 'react-bootstrap'\nimport classnames from 'classnames'\nimport styles from './DataMapping.module.scss'\nimport { BsX } from 'react-icons/bs'\nimport { useDrag, useDrop } from 'react-dnd'\nimport get from 'lodash/get'\nimport { AGGREGATIONS_LABELS } from '../../constants'\n\nexport default function ChartDimensionItem({\n  draggingColumn,\n  index,\n  isValid,\n  DataTypeIcon,\n  columnId,\n  dimension,\n  aggregators,\n  relatedAggregation,\n  onMove,\n\n  onChangeAggregation,\n  onDeleteItem,\n  onChangeDimension,\n\n  commitLocalMapping,\n  rollbackLocalMapping,\n  onInsertColumn,\n  replaceDimension,\n\n  localMappding,\n}) {\n  const ref = useRef(null)\n\n  const [{ isOver }, drop] = useDrop({\n    accept: ['column', 'card'],\n    collect: (monitor) => {\n      return {\n        isOver: monitor.isOver() && monitor.getItem().type === 'column',\n      }\n    },\n    hover(item, monitor) {\n      if (!dimension.multiple) {\n        return\n      }\n      if (!ref.current) {\n        return\n      }\n\n      const hoverIndex = index\n\n      //#TODO: for now we allow only dropping on \"drop another dimension here\" in case of multiple dimensions\n      if (false && item.type === 'column') {\n        onInsertColumn(hoverIndex, item)\n        item.type = 'card'\n        item.dimensionId = dimension.id\n        item.index = hoverIndex\n        return\n      } else if (item.dimensionId === dimension.id) {\n        const dragIndex = item.index\n        // Don't replace items with themselves\n        if (dragIndex === hoverIndex) {\n          return\n        }\n        // Determine rectangle on screen\n        const hoverBoundingRect = ref.current?.getBoundingClientRect()\n        // Get vertical middle\n        const hoverMiddleY =\n          (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n        // Determine mouse position\n        const clientOffset = monitor.getClientOffset()\n        // Get pixels to the top\n        const hoverClientY = clientOffset.y - hoverBoundingRect.top\n        // Only perform the move when the mouse has crossed half of the items height\n        // When dragging downwards, only move when the cursor is below 50%\n        // When dragging upwards, only move when the cursor is above 50%\n        // Dragging downwards\n        if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n          return\n        }\n        // Dragging upwards\n        if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n          return\n        }\n        onMove(dragIndex, hoverIndex)\n        // Note: we're mutating the monitor item here!\n        // Generally it's better to avoid mutations,\n        // but it's good here for the sake of performance\n        // to avoid expensive index searches.\n        item.index = hoverIndex\n      } else {\n        //#TODO: for now we allow only dropping on \"drop another dimension here\" in case of multiple dimensions\n\n        // replaceDimension(\n        //   item.dimensionId,\n        //   dimension.id,\n        //   item.index,\n        //   index,\n        //   true\n        // )\n        // item.dimensionId = dimension.id\n        // item.index = hoverIndex\n        return\n      }\n    },\n    drop: (item, monitor) => {\n      if (!dimension.multiple) {\n        if (item.type === 'column') {\n          onChangeDimension(index, item.id)\n        } else {\n          replaceDimension(item.dimensionId, dimension.id, item.index, index)\n        }\n      }\n    },\n  })\n\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: 'card', index, id: columnId, dimensionId: dimension.id },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n    end: (dropResult, monitor) => {\n      const didDrop = monitor.didDrop()\n      if (didDrop) {\n        commitLocalMapping()\n      } else {\n        rollbackLocalMapping()\n      }\n    },\n  })\n\n  drag(drop(ref))\n\n  return (\n    <div\n      ref={ref}\n      style={{\n        opacity: isDragging || draggingColumn ? 0.5 : 1,\n      }}\n      className={classnames(\n        'assigned-column',\n        styles['column-card'],\n        styles['assigned-column'],\n        isValid ? styles['column-valid'] : styles['column-invalid'],\n        {\n          'border border-danger': isOver,\n          // 'border border-warning': isDragging,\n        }\n      )}\n    >\n      <span>\n        {!!DataTypeIcon && (\n          <DataTypeIcon className={styles['data-type-icon']} />\n        )}\n      </span>\n      <span className={styles['column-title']}>{columnId}</span>\n      {dimension.aggregation && (\n        <Dropdown className=\"d-inline-block ml-2 raw-dropdown\">\n          <Dropdown.Toggle\n            variant={isValid ? 'primary' : 'danger'}\n            className=\"pr-5\"\n          >\n            {get(AGGREGATIONS_LABELS, relatedAggregation, relatedAggregation)}\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            {aggregators.map((aggregatorName) => (\n              <Dropdown.Item\n                key={aggregatorName}\n                onClick={() => onChangeAggregation(index, aggregatorName)}\n              >\n                {get(AGGREGATIONS_LABELS, aggregatorName, aggregatorName)}\n              </Dropdown.Item>\n            ))}\n          </Dropdown.Menu>\n        </Dropdown>\n      )}\n      <button\n        className={styles['remove-assigned']}\n        type=\"button\"\n        onClick={() => onDeleteItem(index)}\n      >\n        <BsX />\n      </button>\n    </div>\n  )\n}\n","import React, { useCallback } from 'react'\nimport DataTypeIcon from './DataTypeIcon'\nimport RequiredIcon from './RequiredIcon'\nimport { Col } from 'react-bootstrap'\nimport { useDrop } from 'react-dnd'\nimport get from 'lodash/get'\nimport uniqueId from 'lodash/uniqueId'\nimport classnames from 'classnames'\nimport arrayMove from 'array-move'\nimport arrayInsert from 'array-insert'\n\n// import { DATATYPE_ICONS } from \"../../constants\"\nimport { dataTypeIcons } from '../../constants'\nimport {\n  getTypeName,\n  getAggregatorNames,\n  getDefaultDimensionAggregation,\n} from '@rawgraphs/rawgraphs-core'\nimport ChartDimensionItem from './ChartDimensionItem'\n\nimport styles from './DataMapping.module.scss'\nconst aggregators = getAggregatorNames()\nconst emptyList = []\n\nconst ChartDimensionCard = ({\n  dimension,\n  dataTypes,\n  mapping,\n  setMapping,\n  commitLocalMapping,\n  rollbackLocalMapping,\n  draggingId,\n  setDraggingId,\n  replaceDimension,\n  localMappding,\n}) => {\n  const [{ isOver }, drop] = useDrop({\n    accept: ['column', 'card'],\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n    }),\n    drop: (item, monitor) => {\n      if (item.type === 'column') {\n        const defaulAggregation = dimension.aggregation\n          ? getDefaultDimensionAggregation(dimension, dataTypes[item.id])\n          : null\n\n        const columnDataType = getTypeName(dataTypes[item.id]);\n        const isValid =\n          dimension.validTypes?.length === 0 ||\n          dimension.validTypes?.includes(columnDataType)\n\n        setMapping({\n          ...mapping,\n          ids: (mapping.ids || []).concat(uniqueId()),\n          value: [...(mapping.value || []), item.id],\n          isValid: isValid,\n          mappedType: columnDataType,\n          config: dimension.aggregation\n            ? {\n                aggregation: [\n                  ...(get(mapping, 'config.aggregation') || []),\n                  defaulAggregation,\n                ],\n              }\n            : undefined,\n        })\n      } else if (item.dimensionId !== dimension.id) {\n        replaceDimension(\n          item.dimensionId,\n          dimension.id,\n          item.index,\n          mapping.value ? mapping.value.length : 0,\n          true\n        )\n      }\n    },\n  })\n\n  // const [collectedProps, drag] = useDrag({\n  //   item: {\n  //     type: 'card',\n\n  //   }\n  // })\n\n  const setAggregation = useCallback(\n    (newAggregations) => {\n      setMapping({\n        ...mapping,\n        config: { aggregation: [...newAggregations] },\n      })\n    },\n    [mapping, setMapping]\n  )\n\n  const idsMappedHere = get(mapping, 'ids', emptyList)\n  const columnsMappedHere = get(mapping, 'value', emptyList)\n  let aggregationsMappedHere = get(mapping, 'config.aggregation', emptyList)\n\n  const onChangeAggregation = useCallback(\n    (i, aggregatorName) => {\n      const newAggregations = [...aggregationsMappedHere]\n      newAggregations[i] = aggregatorName\n      setAggregation(newAggregations)\n    },\n    [aggregationsMappedHere, setAggregation]\n  )\n\n  const onDeleteItem = useCallback(\n    (i) => {\n      let nextConfig\n      if (mapping.config) {\n        nextConfig = {\n          ...mapping.config,\n          aggregation: mapping.config.aggregation.filter((col, j) => j !== i),\n        }\n      }\n\n      setMapping({\n        ...mapping,\n        ids: mapping.ids.filter((col, j) => j !== i),\n        value: mapping.value.filter((col, j) => j !== i),\n        config: nextConfig,\n      })\n    },\n    [mapping, setMapping]\n  )\n\n  const onChangeDimension = useCallback(\n    (i, newCol) => {\n      setMapping({\n        ...mapping,\n        value: mapping.value.map((col, j) => (j === i ? newCol : col)),\n      })\n    },\n    [mapping, setMapping]\n  )\n\n  const onMove = useCallback(\n    (dragIndex, hoverIndex) => {\n      let nextConfig\n      if (mapping.config) {\n        nextConfig = {\n          ...mapping.config,\n          aggregation: arrayMove(\n            mapping.config.aggregation,\n            dragIndex,\n            hoverIndex\n          ),\n        }\n      }\n\n      setMapping(\n        {\n          ...mapping,\n          ids: arrayMove(mapping.ids, dragIndex, hoverIndex),\n          value: arrayMove(mapping.value, dragIndex, hoverIndex),\n          config: nextConfig,\n        },\n        true\n      )\n    },\n    [mapping, setMapping]\n  )\n\n  const onInsertColumn = useCallback(\n    (index, item) => {\n      const defaulAggregation = dimension.aggregation\n        ? getDefaultDimensionAggregation(dimension, dataTypes[item.id])\n        : null\n\n      const nextId = uniqueId()\n      setDraggingId(nextId)\n      setMapping(\n        {\n          ...mapping,\n          ids: arrayInsert(mapping.ids ?? [], index, nextId),\n          value: arrayInsert(mapping.value ?? [], index, item.id),\n          config: dimension.aggregation\n            ? {\n                aggregation: arrayInsert(\n                  get(mapping, 'config.aggregation', []),\n                  index,\n                  defaulAggregation\n                ),\n              }\n            : undefined,\n        },\n        true\n      )\n    },\n    [dataTypes, dimension, mapping, setDraggingId, setMapping]\n  )\n\n  return (\n    // <div\n    //   className=\"Xcard Xp-3 Xm-2 \"\n    //   style={{ minWidth: 250 }}\n    // >\n\n    <Col xs={6} lg={4} xl={4}>\n      <div className={styles['chart-dimension'] + ' user-select-none'}>\n        {/* This is the card header */}\n        <div\n          className={`d-flex flex-row justify-content-between align-items-center ${styles['chart-dimension-header']}`}\n        >\n          <span className=\"text-left\">\n            {dimension.validTypes.map((t) => {\n              return <DataTypeIcon key={t} type={t} />\n              // const DataTypeIcon = dataTypeIcons[t]\n              // return (\n              //   <span key={t}>\n              //     <DataTypeIcon className={styles['accepted-type-icon']} />\n              //   </span>\n              // )\n            })}\n          </span>\n          <span className=\"text-capitalize text-center\">{dimension.name}</span>\n          <span\n            className={styles['dimension-required'] + ' text-right'}\n            style={{ opacity: dimension.required ? 1 : 0 }}\n          >\n            {dimension.required && <RequiredIcon />}\n          </span>\n        </div>\n\n        {/* These are the columns that have been dropped on the current dimension */}\n        {idsMappedHere.map((renderId, i) => {\n          const columnId = columnsMappedHere[i]\n          const columnDataType = getTypeName(dataTypes[columnId])\n          const relatedAggregation = dimension.aggregation\n            ? aggregationsMappedHere[i] ||\n              getDefaultDimensionAggregation(dimension, columnDataType)\n            : undefined\n          const isValid =\n            dimension.validTypes?.length === 0 ||\n            dimension.validTypes?.includes(columnDataType)\n\n          const DataTypeIcon = dataTypeIcons[getTypeName(dataTypes[columnId])]\n\n          return (\n            <ChartDimensionItem\n              id={renderId}\n              key={renderId}\n              index={i}\n              onMove={onMove}\n              onChangeDimension={onChangeDimension}\n              onChangeAggregation={onChangeAggregation}\n              onDeleteItem={onDeleteItem}\n              isValid={isValid}\n              DataTypeIcon={DataTypeIcon}\n              columnId={columnId}\n              dimension={dimension}\n              aggregators={aggregators}\n              relatedAggregation={relatedAggregation}\n              commitLocalMapping={commitLocalMapping}\n              rollbackLocalMapping={rollbackLocalMapping}\n              onInsertColumn={onInsertColumn}\n              draggingColumn={draggingId === renderId}\n              replaceDimension={replaceDimension}\n              localMappding={localMappding}\n            />\n          )\n        })}\n\n        {/* This is the dropzone */}\n        {(dimension.multiple || columnsMappedHere.length === 0) && (\n          <div\n            className={classnames('dropzone', styles['dropzone'], {\n              [styles['active']]: isOver,\n            })}\n            ref={drop}\n          >\n            {!dimension.multiple && 'Drop dimension here'}\n            {dimension.multiple &&\n              columnsMappedHere.length === 0 &&\n              'Drop dimensions here'}\n            {dimension.multiple &&\n              columnsMappedHere.length > 0 &&\n              'Drop another dimension here'}\n          </div>\n        )}\n      </div>\n    </Col>\n  )\n}\n\nexport default ChartDimensionCard\n","import React, {\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport map from 'lodash/map'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { DndProvider } from 'react-dnd'\nimport ColumnCard from './ColumnCard'\nimport ChartDimensionCard from './ChartDimensionCard'\nimport get from 'lodash/get'\nimport uniqueId from 'lodash/uniqueId'\nimport arrayInsert from 'array-insert'\nimport { getDefaultDimensionAggregation } from '@rawgraphs/rawgraphs-core'\n\nfunction removeIndex(mapping, i) {\n  let nextConfig\n  if (mapping.config) {\n    nextConfig = {\n      ...mapping.config,\n      aggregation: mapping.config.aggregation.filter((col, j) => j !== i),\n    }\n  }\n\n  return {\n    ...mapping,\n    ids: mapping.ids.filter((col, j) => j !== i),\n    value: mapping.value.filter((col, j) => j !== i),\n    config: nextConfig,\n  }\n}\n\nfunction arrayReplace(arr, i, value) {\n  return arr.map((item, j) => (j === i ? value : item))\n}\n\nfunction handleReplaceLocalMapping(\n  nextId,\n  prev,\n  fromDimension,\n  toDimension,\n  fromIndex,\n  toIndex,\n  dimensions,\n  dataTypes,\n  multiple = false\n) {\n  const removedItem = {}\n  removedItem.aggregation =\n    prev[fromDimension]?.config?.aggregation?.[fromIndex]\n  removedItem.value = prev[fromDimension].value[fromIndex]\n\n  let moveFn = multiple ? arrayInsert : arrayReplace\n\n  const prevToMapping = prev[toDimension] || {}\n  const toDimensionMapping = {\n    ...prevToMapping,\n    ids: moveFn(prevToMapping.ids ?? [], toIndex, nextId),\n    value: moveFn(prevToMapping.value ?? [], toIndex, removedItem.value),\n  }\n\n  const dimension = dimensions[toDimension]\n  if (dimensions.aggregation) {\n    let newAggregation\n    if (removedItem.aggregation) {\n      newAggregation = removedItem.aggregation\n    } else {\n      newAggregation = getDefaultDimensionAggregation(\n        dimension,\n        dataTypes[removedItem.value]\n      )\n    }\n    toDimensionMapping.config = {\n      aggregation: moveFn(\n        get(prevToMapping, 'config.aggregation', []),\n        toIndex,\n        newAggregation\n      ),\n    }\n  }\n  const obj = {\n    ...prev,\n    [fromDimension]: removeIndex(prev[fromDimension], fromIndex),\n    [toDimension]: toDimensionMapping,\n  }\n  return obj\n}\n\nfunction DataMapping({ dataTypes, dimensions, mapping, setMapping }, ref) {\n  const [localMappding, setLocalMapping] = useState(mapping)\n\n  const updateMapping = useCallback(\n    (dimension, mappingConf, isLocal) => {\n      // Local\n      setLocalMapping((prev) => ({\n        ...prev,\n        [dimension]: mappingConf,\n      }))\n      if (!isLocal) {\n        // Gloab mapping\n        setMapping((prev) => ({\n          ...prev,\n          [dimension]: mappingConf,\n        }))\n      }\n    },\n    [setMapping]\n  )\n  const replaceDimension = useCallback(\n    (fromDimension, toDimension, fromIndex, toIndex, multiple = false) => {\n      const nextId = uniqueId()\n      if (multiple) {\n        setDraggingId(nextId)\n      }\n      setLocalMapping((prev) => {\n        return handleReplaceLocalMapping(\n          nextId,\n          prev,\n          fromDimension,\n          toDimension,\n          fromIndex,\n          toIndex,\n          dimensions,\n          dataTypes,\n          multiple\n        )\n      })\n      if (!multiple) {\n        setMapping((prev) => {\n          return handleReplaceLocalMapping(\n            nextId,\n            prev,\n            fromDimension,\n            toDimension,\n            fromIndex,\n            toIndex,\n            dimensions,\n            dataTypes\n          )\n        })\n      }\n    },\n    [dataTypes, dimensions, setMapping]\n  )\n\n  const [draggingId, setDraggingId] = useState(null)\n\n  const rollbackLocalMapping = useCallback(() => {\n    setLocalMapping(mapping)\n    setDraggingId(null)\n  }, [mapping])\n\n  // const commitLocalMapping = useCallback(() => {\n  //   console.log('COMMIT!', localMappding)\n  //   setMapping(localMappding)\n  //   setDraggingId(null)\n  // }, [localMappding, setMapping])\n  const commitLocalMapping = () => {\n    // setMapping()\n    setMapping(lastMapping.current)\n    setDraggingId(null)\n  }\n\n  const lastMapping = useRef()\n  useEffect(() => {\n    lastMapping.current = localMappding\n  })\n\n  useImperativeHandle(ref, () => ({\n    clearLocalMapping: () => {\n      setLocalMapping({})\n    },\n  }))\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Row>\n        <Col xs={3}>\n          <h5 className=\"text-uppercase\">Dimensions</h5>\n          {map(dataTypes, (dataType, columnName) => {\n            return (\n              <ColumnCard\n                key={columnName}\n                dimensionName={columnName}\n                dimensionType={dataType}\n                commitLocalMapping={commitLocalMapping}\n                rollbackLocalMapping={rollbackLocalMapping}\n              />\n            )\n          })}\n        </Col>\n        <Col>\n          <h5 className=\"text-uppercase\">Chart Variables</h5>\n          <Row\n            className=\"sticky-top\"\n            style={{ top: 'calc(var(--header-height) + 16px)' }}\n          >\n            {dimensions.map((d) => {\n              return (\n                <ChartDimensionCard\n                  key={d.id}\n                  dimension={d}\n                  dataTypes={dataTypes}\n                  // mapping={mapping[d.id] || {}}\n                  mapping={localMappding[d.id] || {}}\n                  setMapping={(mappingConf, isLocal = false) =>\n                    updateMapping(d.id, mappingConf, isLocal)\n                  }\n                  commitLocalMapping={commitLocalMapping}\n                  rollbackLocalMapping={rollbackLocalMapping}\n                  draggingId={draggingId}\n                  setDraggingId={setDraggingId}\n                  replaceDimension={replaceDimension}\n                  localMappding={localMappding}\n                />\n              )\n            })}\n          </Row>\n        </Col>\n      </Row>\n    </DndProvider>\n  )\n}\n\nexport default React.memo(React.forwardRef(DataMapping))\n","import React from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport isObject from 'lodash/isObject'\n\nconst ChartOptionSelect = ({\n  options = [],\n  value,\n  error,\n  onChange,\n  default: defaultValue,\n  label,\n  ...props\n}) => {\n  return (\n    <Row className={props.className}>\n      <Col xs={6} className=\"d-flex align-items-center nowrap\">{label}</Col>\n      <Col xs={6}>\n        <select\n          className=\"custom-select raw-select\"\n          value={value ?? defaultValue}\n          onChange={(e) => {\n            const stringValue = e.target.value\n            const value =\n              props.type === 'number' ? Number(stringValue) : stringValue\n            onChange(value)\n          }}\n        >\n          {options.map((option) =>\n            isObject(option) ? (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ) : (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            )\n          )}\n        </select>\n        {error && (\n          <small>\n            <i>{error}</i>\n          </small>\n        )}\n      </Col>\n    </Row>\n  )\n}\n\nexport default React.memo(ChartOptionSelect)\n","import React from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport ChartOptionSelect from './ChartOptionSelect'\n\nconst ChartOptionNumber = ({\n  value,\n  error,\n  onChange,\n  default: defaultValue,\n  label,\n  isEnabled,\n  ...props\n}) => {\n  if (props.options) {\n    return (\n      <ChartOptionSelect\n        value={value}\n        error={error}\n        onChange={onChange}\n        default={defaultValue}\n        disabled={!isEnabled}\n        label={label}\n        {...props}\n      />\n    )\n  }\n  return (\n    <Row className={props.className}>\n      <Col xs={6} className=\"d-flex align-items-center nowrap\">{label}</Col>\n      <Col xs={6}>\n        <input\n          className=\"w-100 form-control text-field\"\n          type=\"number\"\n          value={value ?? ''}\n          step={props.step}\n          min={props.min}\n          max={props.max}\n          disabled={!isEnabled}\n          onChange={(e) => {\n            const str = e.target.value\n            if (str === '') {\n              onChange(undefined)\n            } else {\n              const n = parseFloat(str)\n              if (!isNaN(n)) {\n                onChange(n)\n              } else {\n                onChange(undefined)\n              }\n            }\n          }}\n          placeholder={defaultValue}\n        />\n      </Col>\n      {error && (\n        <small>\n          <i>{error}</i>\n        </small>\n      )}\n    </Row>\n  )\n}\n\nexport default React.memo(ChartOptionNumber)\n","import React from 'react'\nimport ChartOptionSelect from './ChartOptionSelect'\n\nconst ChartOptionText = ({\n  value,\n  error,\n  onChange,\n  default: defaultValue,\n  label,\n  isEnabled,\n  ...props\n}) => {\n  if (props.options) {\n    return (\n      <ChartOptionSelect\n        value={value}\n        error={error}\n        onChange={onChange}\n        default={defaultValue}\n        label={label}\n        {...props}\n      />\n    )\n  }\n  return (\n    <label className=\"d-block\">\n      <b>{label}</b>\n      <br />\n      <input\n        type=\"text\"\n        value={value ?? ''}\n        step={props.step}\n        disabled={!isEnabled}\n        onChange={(e) => {\n          onChange(e.target.value)\n        }}\n        placeholder={defaultValue}\n      />\n      {error && (\n        <small>\n          <i>{error}</i>\n        </small>\n      )}\n    </label>\n  )\n}\n\nexport default React.memo(ChartOptionText)\n","import React, { useState } from 'react'\nimport styles from './InlineColorPicker.module.scss'\nimport { SketchPicker } from 'react-color'\n\nexport default function InlineColorPicker({ color: maybeColor, onChange, disabled }) {\n  const [displayColorPicker, setDisplayColorPicker] = useState(false)\n  const color = maybeColor ?? '#000000' // Same as <input type='color' />\n\n  return (\n    <>\n      <div\n        className={styles.swatch}\n        onClick={() => setDisplayColorPicker(true)}\n      >\n        <div className={styles.color} style={{ background: color }} />\n        {color.toUpperCase()}\n      </div>\n      {displayColorPicker && (\n        <div className={styles.popover}>\n          <div\n            className={styles.cover}\n            onClick={() => setDisplayColorPicker(false)}\n          />\n          <SketchPicker\n            disabled={disabled}\n            disableAlpha\n            color={color}\n            onChangeComplete={(color) => onChange(color.hex)}\n          />\n        </div>\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport { Col } from 'react-bootstrap'\nimport InilineColorPicker from '../../InlineColorPicker'\nimport ChartOptionSelect from './ChartOptionSelect'\n\nconst ChartOptionColor = ({\n  value,\n  error,\n  onChange,\n  default: defaultValue,\n  label,\n  isEnabled,\n  ...props\n}) => {\n  if (props.options) {\n    return (\n      <ChartOptionSelect\n        value={value}\n        error={error}\n        onChange={onChange}\n        default={defaultValue}\n        label={label}\n        {...props}\n      />\n    )\n  }\n\n  return (\n    <label className={props.className+\" row\"}>\n      <Col xs={6} className=\"d-flex align-items-center\">{label}</Col>\n      <Col xs={6}>\n        <InilineColorPicker disabled={!isEnabled} color={value} onChange={onChange} />\n      </Col>\n      {error && (\n        <small>\n          <i>{error}</i>\n        </small>\n      )}\n    </label>\n  )\n}\n\nexport default React.memo(ChartOptionColor)\n","import React from 'react'\nimport styles from '../ChartOptions.module.scss'\nimport { COLOR_SCHEMES_LABELS } from '../../../constants'\nimport get from 'lodash/get'\n\nconst ColorSchemePreview = ({ label, scale, numSamples=150 }) => {\n  let samples\n  if (scale.ticks) {\n    samples = scale.ticks(numSamples)\n  } else {\n    if(scale.domain){\n      samples = scale.domain()\n    } else {\n      samples = []\n    }\n    \n  }\n  return (\n    <div className={styles['scheme-preview']}>\n      {label && <div style={{marginBottom:2}}>{get(COLOR_SCHEMES_LABELS, label, label)}</div>}\n      <div className=\"d-flex\">\n        {samples.map((sample) => (\n          <div\n            key={'sample-'+sample}\n            style={{ flex: 1, height: 10, background: scale(sample) }}\n          ></div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default React.memo(ColorSchemePreview)","import React from 'react'\nimport { Dropdown } from 'react-bootstrap'\nimport ColorSchemePreview from './ColorSchemePreview'\nimport {\n  colorPresets,\n  getColorDomain,\n  getPresetScale\n} from '@rawgraphs/rawgraphs-core'\nimport styles from '../ChartOptions.module.scss'\n\nconst ColorSchemesDropDown = ({\n    interpolators,\n    interpolator,\n    setInterpolator,\n    // To display color-scale preview\n    colorDataset,\n    colorDataType,\n    scaleType,\n    currentFinalScale\n}) => {\n\n  return (\n    <Dropdown className=\"d-inline-block raw-dropdown w-100\">\n      <Dropdown.Toggle variant=\"white\" className=\"w-100\" style={{paddingRight:24}} disabled={!colorDataType}>\n        { currentFinalScale && <ColorSchemePreview\n          scale={currentFinalScale}\n        />}\n      </Dropdown.Toggle>\n      {colorDataType && <Dropdown.Menu className=\"w-100\">\n      {interpolators.map(\n        (intrplr) => {\n          return (\n            <Dropdown.Item key={intrplr} onClick={()=>setInterpolator(intrplr)} className={styles[\"color-scheme-dropdown-item\"]}>\n              { colorDataset[0] && colorPresets[scaleType][interpolator] && \n                <ColorSchemePreview\n                  scale={\n                    getPresetScale(scaleType, getColorDomain(colorDataset, colorDataType, scaleType), intrplr)\n                  }\n                  label={intrplr}\n                />\n              }\n            </Dropdown.Item>\n          )\n        }\n      )}\n      </Dropdown.Menu>}\n    </Dropdown>\n  )\n}\n\nexport default React.memo(ColorSchemesDropDown)","import React from 'react'\nimport { Tooltip, OverlayTrigger } from 'react-bootstrap'\nimport {\n  BsArrowCounterclockwise,\n  BsArrowLeftRight,\n  BsLockFill,\n  BsUnlockFill,\n} from 'react-icons/bs'\n\nfunction ResetBtn({ resetScale }) {\n  return (\n    <OverlayTrigger\n      key=\"bottom\"\n      placement=\"bottom\"\n      overlay={<Tooltip id={`tooltip-top`}>Reset domain</Tooltip>}\n    >\n      <span type=\"button\" className=\"btn\" onClick={resetScale}>\n        <BsArrowCounterclockwise width=\"16\" height=\"16\" />\n      </span>\n    </OverlayTrigger>\n  )\n}\n\nfunction InvertBtn({ invertScale }) {\n  return (\n    <OverlayTrigger\n      key=\"bottom\"\n      placement=\"bottom\"\n      overlay={<Tooltip id={`tooltip-top`}>Invert</Tooltip>}\n    >\n      <span type=\"button\" className=\"btn\" onClick={invertScale}>\n        <BsArrowLeftRight width=\"16\" height=\"16\" />\n      </span>\n    </OverlayTrigger>\n  )\n}\n\nfunction LockBtn({ handleChangeLocked, locked }) {\n  return (\n    <OverlayTrigger\n      key=\"bottom\"\n      placement=\"bottom\"\n      overlay={<Tooltip id={`tooltip-top`}>{locked ? 'Unlock' : 'Lock'} scale</Tooltip>}\n    >\n      <span\n        type=\"button\"\n        className={`btn ${locked ? 'Xbtn-primary' : ''}`}\n        onClick={() => handleChangeLocked(!locked)}\n      >\n        {locked ? <BsUnlockFill width=\"16\" height=\"16\" /> : <BsLockFill width=\"16\" height=\"16\" />}\n      </span>\n    </OverlayTrigger>\n  )\n}\n\nexport { ResetBtn, InvertBtn, LockBtn }\n","import { useRef, useEffect } from 'react'\nexport default function usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef()\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value\n  }, [value]) // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current\n}\n","import React, { useState, useMemo, useEffect, useCallback, useRef } from 'react'\nimport InilineColorPicker from '../../InlineColorPicker'\nimport ColorSchemesDropDown from './ColorSchemesDropDown'\nimport { Row, Col, Dropdown } from 'react-bootstrap'\nimport { ResetBtn, InvertBtn, LockBtn } from './ColorScaleUtils'\nimport { SCALES_LABELS } from '../../../constants'\nimport get from 'lodash/get'\nimport keyBy from 'lodash/keyBy'\nimport {\n  getInitialScaleValues,\n  getColorScale,\n  getDefaultColorScale,\n  getColorDomain,\n  colorPresets,\n  getAvailableScaleTypes,\n  getValueType,\n} from '@rawgraphs/rawgraphs-core'\nimport styles from '../ChartOptions.module.scss'\nimport usePrevious from '../../../hooks/usePrevious'\n\nfunction getDatePickerValue(userValue) {\n  if (userValue.userDomain === 0) {\n    return 0\n  }\n  if (!userValue.userDomain) {\n    return ''\n  }\n\n  if (getValueType(userValue.userDomain) === 'date') {\n    return userValue.userDomain.toISOString().substring(0, 10)\n  }\n\n  return userValue.userDomain\n}\n\nconst ChartOptionColorScale = ({\n  value,\n  error,\n  onChange,\n  defaultValue,\n  label,\n  dimension,\n  dataset,\n  mapping,\n  dataTypes,\n  chart,\n  mappedData,\n  mappingValue,\n  colorDataset,\n  colorDataType,\n  hasAnyMapping,\n  ...props\n}) => {\n\n  // here we leverage injection of the __loaded prop in the color scale, see App.js\n  const initialValue = useRef(!!value.__loaded)\n  \n  const [scaleType, setScaleType] = useState(get(value, 'scaleType'))\n\n  const defaultColor = useMemo(() => {\n    const colorFromDefault = get(defaultValue, 'defaultColor', '#cccccc')\n    return get(value, 'defaultColor', colorFromDefault)\n  }, [defaultValue, value])\n\n  const [locked, setLocked] = useState(get(value, 'locked'))\n\n  const availableScaleTypes = useMemo(() => {\n    const nextTypes = getAvailableScaleTypes(colorDataType, colorDataset)\n    return nextTypes\n  }, [colorDataType, colorDataset])\n\n  const [interpolators, setInterpolators] = useState(\n    get(value, 'scaleType')\n      ? Object.keys(colorPresets[get(value, 'scaleType')])\n      : []\n  )\n\n  const [interpolator, setInterpolator] = useState(get(value, 'interpolator'))\n  const [userValues, setUserValues] = useState(\n    get(value, 'userScaleValues', []).map((userValue) => ({\n      ...userValue,\n      userDomain: userValue.domain,\n      userRange: userValue.range,\n    }))\n  )\n\n  const getCurrentFinalScale = useCallback(\n    (interpolator, scaleType, userValuesForFinalScale, defaultColor) => {\n      if (\n        !scaleType ||\n        !interpolator ||\n        !colorPresets[scaleType][interpolator] ||\n        !userValuesForFinalScale ||\n        !userValuesForFinalScale.length\n      ) {\n        return\n      }\n\n      const domains = userValuesForFinalScale\n        .map((x) => x.domain)\n        .filter((x) => x !== undefined)\n      if (!domains.length) {\n        return\n      }\n\n      const previewScale = getColorScale(\n        colorDataset, //the array of values of the dataset mapped on the color dimension\n        colorDataType,\n        scaleType, //\n        interpolator,\n        userValuesForFinalScale,\n      )\n\n      return previewScale\n    },\n    [colorDataType, colorDataset]\n  )\n\n  const getDefaultUserValues = useCallback(\n    (interpolator, scaleType) => {\n      if (!colorDataset.length || !colorDataType || !scaleType) {\n        return []\n      }\n      if (!colorPresets[scaleType][interpolator]) {\n        return []\n      }\n\n      const domain = getColorDomain(colorDataset, colorDataType, scaleType)\n\n      return getInitialScaleValues(domain, scaleType, interpolator).map(\n        (userValue) => ({\n          ...userValue,\n          userRange: userValue.range,\n          userDomain: userValue.domain,\n        })\n      )\n    },\n    [colorDataType, colorDataset]\n  )\n\n  const getUserValuesForFinalScale = useCallback(\n    (values) => {\n      return values.map((value) => ({\n        range: value.userRange,\n        domain:\n          colorDataType === 'date'\n            ? value.userDomain?.toString()\n            : value.userDomain,\n        // domain: value.userDomain,\n      }))\n    },\n    [colorDataType]\n  )\n\n  const currentFinalScale = useMemo(() => {\n\n    if (scaleType && interpolator) {\n      const currentUserValues =\n        userValues && userValues.length\n          ? userValues\n          : getDefaultUserValues(interpolator, scaleType)\n      const valuesForFinalScale = getUserValuesForFinalScale(currentUserValues)\n      return getCurrentFinalScale(interpolator, scaleType, valuesForFinalScale)\n    }\n    return getDefaultColorScale()\n  }, [\n    getCurrentFinalScale,\n    getDefaultUserValues,\n    getUserValuesForFinalScale,\n    interpolator,\n    scaleType,\n    userValues,\n  ])\n\n  const handleChangeValues = useCallback(\n    (nextUserValues) => {\n      let valuesForFinalScale = getUserValuesForFinalScale(nextUserValues)\n\n      //notify ui\n      const outScaleParams = {\n        scaleType,\n        interpolator: interpolator,\n        userScaleValues: valuesForFinalScale,\n        defaultColor,\n        locked,\n      }\n      onChange(outScaleParams)\n    },\n    [getUserValuesForFinalScale, scaleType, interpolator, defaultColor, locked, onChange]\n  )\n\n  const setUserValueRange = useCallback(\n    (index, value) => {\n      const newUserValues = [...userValues]\n      newUserValues[index].userRange = value\n      setUserValues(newUserValues)\n      handleChangeValues(newUserValues)\n    },\n    [handleChangeValues, userValues]\n  )\n\n  const setUserValueDomain = useCallback(\n    (index, value) => {\n      const newUserValues = [...userValues]\n      newUserValues[index].userDomain = value\n      setUserValues(newUserValues)\n      handleChangeValues(newUserValues)\n    },\n    [handleChangeValues, userValues]\n  )\n\n\n  const handleChangeScaleType = useCallback(\n    (nextScaleType) => {\n\n      setScaleType(nextScaleType)\n\n      //update interpolators\n      const nextInterpolators = colorPresets[nextScaleType]\n        ? Object.keys(colorPresets[nextScaleType])\n        : []\n      setInterpolators(nextInterpolators)\n\n      //set first interpolator\n      const nextInterpolator = nextInterpolators[0]\n      setInterpolator(nextInterpolator)\n\n      //user values\n      const nextUserValues = getDefaultUserValues(\n        nextInterpolator,\n        nextScaleType,\n      )\n      setUserValues(nextUserValues)\n      const valuesForFinalScale = getUserValuesForFinalScale(nextUserValues)\n\n      //notify ui\n      const outScaleParams = {\n        scaleType: nextScaleType,\n        interpolator: nextInterpolator,\n        userScaleValues: valuesForFinalScale,\n        defaultColor,\n        locked,\n      }\n      onChange(outScaleParams)\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [getDefaultUserValues, getUserValuesForFinalScale, defaultColor, onChange, locked]\n  )\n\n  const handleSetInterpolator = useCallback(\n    (nextInterpolator, customUserValues) => {\n      setInterpolator(nextInterpolator)\n\n      //user values\n      const nextUserValues = getDefaultUserValues(nextInterpolator, scaleType)\n      setUserValues(nextUserValues)\n      let valuesForFinalScale = getUserValuesForFinalScale(nextUserValues)\n      \n      if(customUserValues){\n        const byDomain = keyBy(customUserValues, 'domain')\n        valuesForFinalScale = valuesForFinalScale.map(v => ({\n          ...v,\n          range: byDomain[v.domain.toString()] ? byDomain[v.domain.toString()].userRange : v.range\n        }))\n      }\n      //notify ui\n      const outScaleParams = {\n        scaleType,\n        interpolator: nextInterpolator,\n        userScaleValues: valuesForFinalScale,\n        defaultColor,\n        locked,\n      }\n      onChange(outScaleParams)\n    },\n    [getDefaultUserValues, getUserValuesForFinalScale, onChange, scaleType, defaultColor, locked,]\n  )\n\n  const handleChangeLocked = useCallback(\n    (nextLocked) => {\n      setLocked(nextLocked)\n      //this is needed for disabiling automatic scale reset\n      initialValue.current = true\n\n      const outScaleParams = {\n        scaleType,\n        interpolator,\n        userScaleValues: userValues,\n        defaultColor,\n        locked: nextLocked,\n      }\n      onChange(outScaleParams)\n    },\n    [scaleType, interpolator, userValues, defaultColor, onChange]\n  )\n\n\n\n  const resetScale = useCallback(() => {\n    handleSetInterpolator(interpolator, userValues)\n  }, [handleSetInterpolator, interpolator, userValues])\n\n  const invertScale = useCallback(() => {\n\n    let reversedValues = [...userValues]\n    reversedValues.reverse()\n\n    const invertedValues = userValues.map((v, i) => ({\n      ...v,\n      userRange: reversedValues[i].userRange,\n      range: reversedValues[i].range,\n\n    }))\n\n    setUserValues(invertedValues)\n    handleChangeValues(invertedValues)\n  }, [handleChangeValues, userValues])\n\n\n\n  const prevMappingValue = usePrevious(mappingValue)\n\n  useEffect(() => {\n    if (prevMappingValue && mappingValue !== prevMappingValue) {\n      initialValue.current = false\n    }\n  }, [mappingValue, prevMappingValue])\n\n  useEffect(() => {\n    if (!initialValue.current && !locked) {\n      const nextScaleType = availableScaleTypes[0]\n      handleChangeScaleType(nextScaleType)\n    }\n\n  }, [availableScaleTypes, handleChangeScaleType, locked])\n\n  // update scale on dataset update.\n  // #TODO: fixme\n\n  // const prevDataset = usePrevious(colorDataset)\n  // const prevScaleType = usePrevious(colorDataset)\n\n  // useEffect(() => {\n  //   if (!locked && colorDataset !== prevDataset && prevScaleType === scaleType) {\n  //     console.info(\"dddd resetting scope\")\n  //     const nextUserValues = getDefaultUserValues(\n  //       interpolator,\n  //       scaleType,\n  //     )\n  //     setUserValues(nextUserValues)\n  //     const valuesForFinalScale = getUserValuesForFinalScale(nextUserValues)\n  //     //notify ui\n  //     const outScaleParams = {\n  //       scaleType,\n  //       interpolator,\n  //       userScaleValues: valuesForFinalScale,\n  //       defaultColor,\n  //       locked,\n  //     }\n  //     onChange(outScaleParams)\n  //   }\n  // }, [colorDataset, defaultColor, getDefaultUserValues, getUserValuesForFinalScale, interpolator, locked, onChange, prevDataset, prevScaleType, scaleType])\n\n\n  return hasAnyMapping ? (\n    <>\n      <Row className={props.className} style={{marginTop:'8px', marginBottom:'8px'}}>\n        <Col xs={5} className=\"d-flex align-items-center nowrap\">\n          Color scale\n        </Col>\n        <Col xs={7}>\n          <Dropdown className=\"d-inline-block raw-dropdown w-100\">\n            <Dropdown.Toggle variant=\"white\" className=\"w-100\" style={{paddingRight:24}} disabled={!colorDataType}>\n              {get(SCALES_LABELS, scaleType, scaleType)}\n            </Dropdown.Toggle>\n            <Dropdown.Menu className=\"w-100\">\n            {availableScaleTypes.map(\n              (s) => {\n                return (\n                  <Dropdown.Item key={s} onClick={()=>handleChangeScaleType(s)}>\n                    {get(SCALES_LABELS, s, s)}\n                  </Dropdown.Item>\n                )\n              }\n            )}\n            </Dropdown.Menu>\n          </Dropdown>\n        </Col>\n      </Row>\n\n      {/* Color scheme */}\n      <Row className={[props.className].join(' ')} style={{marginTop:'8px', marginBottom:'8px'}}>\n        <Col xs={5} className=\"d-flex align-items-center nowrap\">\n          Color scheme\n        </Col>\n        <Col xs={7}>\n          <ColorSchemesDropDown\n            interpolators={interpolators}\n            interpolator={interpolator}\n            setInterpolator={handleSetInterpolator}\n            // To display color-scale preview\n            colorDataset={colorDataset}\n            colorDataType={colorDataType}\n            scaleType={scaleType}\n            currentFinalScale={currentFinalScale}\n          />\n        </Col>\n      </Row>\n\n      {/* Scale color swatches */}\n      {colorDataType && userValues && (\n        <div className={styles['color-swatches-list']}>\n          {userValues.map((userValue, i) => (\n            <Row\n              key={i}\n              className={[\n                styles['chart-option'],\n                styles['color-swatch'],\n                scaleType !== 'ordinal'\n                  ? styles['not-ordinal']\n                  : styles['ordinal'],\n              ].join(' ')}\n            >\n              <Col xs={12}>\n                <div className={styles['color-scale-item']}>\n                  {scaleType === 'ordinal' &&\n                    get(userValue, 'domain') !== undefined && (\n                      <span\n                        className=\"nowrap text-truncate pr-2\"\n                        title={userValue.domain && userValue.domain.toString()}\n                      >\n                        {userValue.domain === ''\n                          ? '[empty string]'\n                          : userValue.domain.toString()}\n                      </span>\n                    )}\n                  {scaleType !== 'ordinal' && (\n                    <>\n                      <span className=\"nowrap\">\n                        {i === 0\n                          ? 'Start'\n                          : i === userValues.length - 1\n                            ? 'End'\n                            : 'Middle'}\n                      </span>\n                      <input\n                        disabled={locked}\n                        type={getValueType(userValue.userDomain)}\n                        className=\"form-control text-field\"\n                        value={getDatePickerValue(userValue)}\n                        onChange={(e) => {\n                          if (colorDataType === 'date') {\n                            setUserValueDomain(i, new Date(e.target.value))\n                          } else {\n                            setUserValueDomain(i, e.target.value)\n                          }\n                        }}\n                      ></input>\n                    </>\n                  )}\n                  <InilineColorPicker\n                    color={userValue.userRange}\n                    onChange={(color) => {\n                      setUserValueRange(i, color)\n                    }}\n                  />\n                </div>\n              </Col>\n            </Row>\n          ))}\n          <Row>\n            <Col className=\"d-flex justify-content-end\">\n              <ResetBtn resetScale={resetScale} />\n              <InvertBtn invertScale={invertScale} />\n              {\n                scaleType !== 'ordinal' && (\n                  <LockBtn locked={locked} handleChangeLocked={handleChangeLocked} />\n                )\n              }\n\n            </Col>\n          </Row>\n\n        </div>\n      )}\n\n    </>\n  ) : null\n}\n\nexport default ChartOptionColorScale\n","import React, { useState, useMemo, useEffect, useCallback } from 'react'\nimport InilineColorPicker from '../../InlineColorPicker'\nimport { Col } from 'react-bootstrap'\nimport get from 'lodash/get'\nimport style from '../ChartOptions.module.scss'\n\nconst ChartOptionColorScaleDefault = ({\n  value,\n  error,\n  onChange,\n  default: defaultValue,\n  label,\n  dimension,\n  dataset,\n  mapping,\n  dataTypes,\n  chart,\n  mappedData,\n  mappingValue,\n  colorDataType,\n  colorDataset,\n  ...props\n}) => {\n  const colorFromValue = useMemo(() => {\n    const colorFromDefault = get(defaultValue, 'defaultColor', '#cccccc')\n    return get(value, 'defaultColor', colorFromDefault)\n  }, [defaultValue, value])\n\n  const [defaultColor, setDefaultColor] = useState(colorFromValue)\n\n  const handleChangeDefaultColor = useCallback(\n    (nextDefaultColor) => {\n      setDefaultColor(nextDefaultColor)\n      const outScaleParams = {\n        ...value,\n        defaultColor: nextDefaultColor,\n      }\n      onChange(outScaleParams)\n    },\n    [value, onChange]\n  )\n\n  useEffect(() => {\n    if (defaultValue && defaultValue.defaultColor !== defaultColor) {\n      handleChangeDefaultColor(defaultValue.defaultColor)\n    }\n  }, [defaultColor, defaultValue, handleChangeDefaultColor])\n\n  return (\n    <>\n      <label className={[style['chart-option'], 'row'].join(' ')}>\n        <Col xs={6} className=\"d-flex align-items-center\">\n          Default\n        </Col>\n        <Col xs={6}>\n          <InilineColorPicker\n            color={defaultColor}\n            onChange={handleChangeDefaultColor}\n          />\n        </Col>\n      </label>\n    </>\n  )\n}\n\nexport default ChartOptionColorScaleDefault\n","import React, { useMemo } from 'react'\nimport ChartOptionColorScale from './ChartOptionColorScale'\nimport ChartOptionColorScaleDefault from './ChartOptionColorScaleDefault'\n\nconst ChartOptionColorScaleWrapper = ({\n  value,\n  onChange,\n  default: defaultValue,\n  mappingValue,\n  colorDataType,\n  colorDataset,\n\n}) => {\n\n  const hasAnyMapping = useMemo(() => {\n    return colorDataset && colorDataset.length > 0\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [colorDataset])\n\n  return <>\n    {!hasAnyMapping && <ChartOptionColorScaleDefault onChange={onChange} defaultValue={defaultValue} value={value} />}\n    {hasAnyMapping &&  <ChartOptionColorScale hasAnyMapping={hasAnyMapping} mappingValue={mappingValue} defaultValue={defaultValue} value={value} colorDataType={colorDataType} colorDataset={colorDataset} onChange={onChange} />}\n  </>\n}\n\nexport default ChartOptionColorScaleWrapper\n","import React from 'react'\nimport { Row, Col, Form } from 'react-bootstrap'\n\nconst ChartOptionBoolean = ({ optionId, label, value, error, onChange, className, isEnabled }) => {\n  return (\n    <Row className={className}>\n      <Col xs={6} className=\"d-flex align-items-center nowrap\">{label}</Col>\n      <Form className=\"col-6 d-flex align-items-center\">\n        <Form.Check\n          type=\"switch\"\n          checked={!!value}\n          disabled={!isEnabled}\n          onChange={(e) => {\n            onChange(e.target.checked)\n          }}\n          id={optionId}\n          label={value ? 'Yes' : 'No'}\n        />\n      </Form>\n      {error && (\n        <div className=\"col-12\">\n          <small>\n            <i>{error}</i>\n          </small>\n        </div>\n      )}\n    </Row>\n  )\n}\n\nexport default React.memo(ChartOptionBoolean)\n","import React, { useCallback, useState, useMemo } from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport {\n  getOptionsConfig,\n  getContainerOptions,\n  getDefaultOptionsValues,\n  getEnabledOptions,\n  getTypeName,\n} from '@rawgraphs/rawgraphs-core'\nimport ChartOptionNumber from './ChartOptionTypes/ChartOptionNumber'\nimport ChartOptionText from './ChartOptionTypes/ChartOptionText'\nimport ChartOptionColor from './ChartOptionTypes/ChartOptionColor'\nimport ChartOptionColorScaleWrapper from './ChartOptionTypes/ChartOptionColorScaleWrapper'\nimport ChartOptionBoolean from './ChartOptionTypes/ChartOptionBoolean'\nimport get from 'lodash/get'\nimport map from 'lodash/map'\nimport styles from './ChartOptions.module.scss'\nimport omit from 'lodash/omit'\n\nconst CHART_OPTION_COMPONENTS = {\n  number: ChartOptionNumber,\n  text: ChartOptionText,\n  color: ChartOptionColor,\n  colorScale: ChartOptionColorScaleWrapper,\n  boolean: ChartOptionBoolean,\n}\n\nfunction getPartialMapping(mapping, dimension, repeatIndex) {\n  const nv = get(mapping[dimension], `value[${repeatIndex}]`)\n  return {\n    ...mapping,\n    [dimension]: {\n      ...mapping[dimension],\n      value: [nv],\n    },\n  }\n}\n\nfunction getPartialMappedData(mappedData, dimension, repeatIndex) {\n  return Array.isArray(mappedData)\n    ? mappedData.map((datum) => {\n        const value = get(datum[dimension], `[${repeatIndex}]`)\n        return {\n          ...datum,\n          [dimension]: value,\n        }\n      })\n    : mappedData\n}\n\nfunction getDefaultForRepeat(def, index) {\n  if (Array.isArray(def.repeatDefault)) {\n    return get(def.repeatDefault, `[${index}]`, def.default)\n  }\n  return def.default\n}\n\nfunction WrapControlComponent({\n  type,\n  optionId,\n  setVisualOptions,\n  label,\n  repeatIndex,\n  ...props\n}) {\n  const Component = CHART_OPTION_COMPONENTS[type]\n\n  const remainingOptions = useMemo(() => {\n    if (type !== 'colorScale') {\n      return null\n    }\n\n    return Object.keys(omit(props.visualOptions, optionId))\n      .map((k) => JSON.stringify(get(props.visualOptions, k, '')))\n      .join('-')\n  }, [type, props.visualOptions, optionId])\n\n  const domainFromChart = useMemo(() => {\n    if (type !== 'colorScale') {\n      return null\n    }\n    if (props.domain && props.chart[props.domain]) {\n      //as sometimes the current chart is not in synch with current options (chart is set before options, we just handle an exception)\n      //everything should be ok on the next render.\n      try {\n        const domain = props.chart[props.domain](\n          props.mappedData,\n          props.mapping,\n          props.visualOptions\n        )\n        return domain\n      } catch (e) {\n        return null\n      }\n    } else {\n      return null\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    type,\n    props.chart,\n    props.domain,\n    props.mappedData,\n    props.mapping,\n    remainingOptions,\n  ])\n\n  const mappingValue = useMemo(() => {\n    if (type !== 'colorScale') {\n      return null\n    }\n    return domainFromChart\n      ? '__custom__'\n      : get(props.mapping, `[${props.dimension}].value`)\n  }, [domainFromChart, props.dimension, props.mapping, type])\n\n  const colorDataType = useMemo(() => {\n    if (type !== 'colorScale') {\n      return null\n    }\n    if (domainFromChart) {\n      return domainFromChart.type\n    }\n    return props.dataTypes[mappingValue]\n      ? getTypeName(props.dataTypes[mappingValue])\n      : 'string'\n  }, [type, props.dataTypes, domainFromChart, mappingValue])\n\n  const colorDataset = useMemo(() => {\n    if (type !== 'colorScale') {\n      return null\n    }\n    if (domainFromChart) {\n      return domainFromChart.domain\n    }\n\n    if (props.mappedData) {\n      return props.mappedData\n        .map((d) => get(d, props.dimension))\n        .filter(\n          (item) => item !== undefined && !(Array.isArray(item) && !item.length)\n        )\n    } else {\n      return []\n    }\n  }, [type, props.dimension, domainFromChart, props.mappedData])\n\n  const handleControlChange = useCallback(\n    (nextValue) => {\n      setVisualOptions((visualOptions) => {\n        let newValue = nextValue\n        if (repeatIndex !== undefined) {\n          newValue = visualOptions[optionId] || []\n          newValue[repeatIndex] = nextValue\n        }\n        return {\n          ...visualOptions,\n          [optionId]: newValue,\n        }\n      })\n    },\n    [optionId, repeatIndex, setVisualOptions]\n  )\n\n  return (\n    <Component\n      type={type}\n      domainFromChart={domainFromChart}\n      mappingValue={mappingValue}\n      colorDataType={colorDataType}\n      colorDataset={colorDataset}\n      optionId={optionId}\n      label={\n        repeatIndex !== undefined ? (\n          <React.Fragment>\n            {label} ({repeatIndex + 1})\n          </React.Fragment>\n        ) : (\n          label\n        )\n      }\n      {...omit(props, [\n        'mapping',\n        'visualOptions',\n        'chart',\n        'dataset',\n        'dataTypes',\n        'mappedData',\n      ])}\n      onChange={handleControlChange}\n    />\n  )\n}\n\nconst ChartOptions = ({\n  chart,\n  dataset,\n  mapping,\n  dataTypes,\n  visualOptions,\n  setVisualOptions,\n  error,\n  mappedData,\n}) => {\n  const optionsConfig = useMemo(() => {\n    return getOptionsConfig(chart?.visualOptions)\n  }, [chart])\n\n  const [collapseStatus, setCollapseStatus] = useState(() => {\n    const groups = {}\n    for (const option in optionsConfig) {\n      const group = optionsConfig[option].group\n      if (!groups.hasOwnProperty(group)) {\n        groups[group] = true\n      }\n    }\n    return groups\n  })\n\n  const enabledOptions = useMemo(() => {\n    return getEnabledOptions(optionsConfig, visualOptions, mapping)\n  }, [optionsConfig, visualOptions, mapping])\n\n  // const enabledGroupsByName = useMemo(() => {\n  //   const enabledGroupsNames = Object.keys(optionsConfig).map(optionName => enabledOptions[optionName] ? optionsConfig[optionName].group : null).filter(x => !!x)\n  //   return mapValues(keyBy(enabledGroupsNames), x => true)\n  // }, [enabledOptions, optionsConfig])\n  // // #TODO we can use enabledGroupsByName to disable the group\n\n  const optionsDefinitionsByGroup = useMemo(() => {\n    // update \"collapseStatus\" state\n    // add/remove options groups when selected charts changes\n    const groups = {}\n    for (const option in optionsConfig) {\n      const group = optionsConfig[option].group\n      if (!groups.hasOwnProperty(group)) {\n        groups[group] = group === 'artboard' ? false : true\n      }\n    }\n    setCollapseStatus(groups)\n    return Object.keys(optionsConfig).reduce((acc, optionId) => {\n      const option = optionsConfig[optionId]\n      const group = option?.group || ''\n      if (!acc[group]) {\n        acc[group] = {}\n      }\n      acc[group][optionId] = option\n      return acc\n    }, {})\n  }, [optionsConfig])\n\n  const containerOptions = useMemo(() => {\n    const defaultOptionsValues = getDefaultOptionsValues(optionsConfig, mapping)\n    const opts = {\n      ...defaultOptionsValues,\n      ...visualOptions,\n    }\n    return getContainerOptions(optionsConfig, opts)\n  }, [mapping, optionsConfig, visualOptions])\n\n  return (\n    <div className={[styles['chart-options'], 'col-4', 'col-xl-3'].join(' ')}>\n      {map(optionsDefinitionsByGroup, (options, groupName) => {\n        return (\n          <div\n            key={groupName}\n            groupname={groupName}\n            className={[\n              styles['options-group'],\n              collapseStatus[groupName] ? styles['collapsed'] : '',\n            ].join(' ')}\n          >\n            <Row className=\"sticky-top\">\n              <Col\n                className={`d-flex justify-content-between align-items-center ${styles['group-header']}`}\n              >\n                <h5 className=\"text-uppercase m-0\">{groupName}</h5>\n                <span\n                  className={[styles['collapse-button'], 'cursor-pointer'].join(\n                    ' '\n                  )}\n                  onClick={() =>\n                    setCollapseStatus({\n                      ...collapseStatus,\n                      [groupName]: !collapseStatus[groupName],\n                    })\n                  }\n                ></span>\n              </Col>\n            </Row>\n            {map(options, (def, optionId) => {\n              // repeated options: notice that value is set to a default if undefined\n              // this is caused by changes in shapes of the mapping object\n              // (when a new value is dragged to the dimension that repeats the option)\n              // the same approach is applied in option validation by the raw core lib\n              return def.repeatFor ? (\n                get(\n                  mapping,\n                  `[${def.repeatFor}].value`,\n                  []\n                ).map((v, repeatIndex) => (\n                  <WrapControlComponent\n                    className={styles['chart-option']}\n                    key={optionId + repeatIndex}\n                    repeatIndex={repeatIndex}\n                    {...def}\n                    optionId={optionId}\n                    error={error?.errors?.[optionId + repeatIndex]}\n                    value={\n                      visualOptions?.[optionId]?.[repeatIndex] ??\n                      getDefaultForRepeat(def, repeatIndex)\n                    }\n                    mapping={\n                      def.type === 'colorScale'\n                        ? getPartialMapping(mapping, def.repeatFor, repeatIndex)\n                        : undefined\n                    }\n                    chart={def.type === 'colorScale' ? chart : undefined}\n                    dataset={def.type === 'colorScale' ? dataset : undefined}\n                    dataTypes={\n                      def.type === 'colorScale' ? dataTypes : undefined\n                    }\n                    visualOptions={\n                      def.type === 'colorScale' ? visualOptions : undefined\n                    }\n                    mappedData={getPartialMappedData(\n                      mappedData,\n                      def.repeatFor,\n                      repeatIndex\n                    )}\n                    setVisualOptions={setVisualOptions}\n                    isEnabled={enabledOptions[optionId]}\n                  />\n                ))\n              ) : (\n                <WrapControlComponent\n                  className={styles['chart-option']}\n                  key={optionId}\n                  {...def}\n                  optionId={optionId}\n                  error={error?.errors?.[optionId]}\n                  value={visualOptions?.[optionId]}\n                  mapping={def.type === 'colorScale' ? mapping : undefined}\n                  chart={def.type === 'colorScale' ? chart : undefined}\n                  dataset={def.type === 'colorScale' ? dataset : undefined}\n                  dataTypes={def.type === 'colorScale' ? dataTypes : undefined}\n                  visualOptions={\n                    def.type === 'colorScale' ? visualOptions : undefined\n                  }\n                  mappedData={mappedData}\n                  setVisualOptions={setVisualOptions}\n                  isEnabled={enabledOptions[optionId]}\n                />\n              )\n            })}\n            {groupName === 'artboard' && visualOptions.showLegend && (\n              <p className=\"small\">\n                The final output will be {containerOptions?.width}px *{' '}\n                {containerOptions?.height}px including the legend.\n              </p>\n            )}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ChartOptions\n","/**\n * @typedef {{\n *  name: string\n *  id: string\n *  description: string\n *  code: string\n *  categories: string[]\n *  tutorial?: string\n * }} chartMetadata\n */\n\n/**\n * @type string | null\n */\nlet prevChartIdRendered = null\n\n/**\n * @param {ChartMetada} chartMetadata\n */\nexport function onChartRendered(chartMetadata) {\n  if (prevChartIdRendered === chartMetadata.id) {\n    // Nothing to report the chart still the same\n    return\n  }\n  prevChartIdRendered = chartMetadata.id\n\n  if (typeof window.gtag === 'function') {\n    window.gtag('event', 'chart-render', {\n      event_category: chartMetadata.id,\n    })\n  }\n}\n\n/**\n * @param {chartMetadata} chartMetadata\n * @param {string} format\n */\nexport function onChartExported(chartMetadata, format) {\n  if (typeof window.gtag === 'function') {\n    window.gtag('event', 'chart-export', {\n      event_category: chartMetadata.id,\n      event_label: format,\n    })\n  }\n}\n","import React, { useRef, useEffect } from 'react'\nimport { chart as rawChart } from '@rawgraphs/rawgraphs-core'\nimport useDebounce from '../../hooks/useDebounce'\nimport WarningMessage from '../WarningMessage'\nimport { onChartRendered } from '../../gaEvents'\n\nconst ChartPreview = ({\n  chart,\n  dataset: data,\n  dataTypes,\n  mapping,\n  visualOptions,\n  error,\n  setError,\n  setRawViz,\n  mappedData,\n}) => {\n  const domRef = useRef(null)\n\n  const vizOptionsDebounced = useDebounce(visualOptions, 200)\n\n  useEffect(() => {\n    setError(null)\n\n    // control required variables\n    // need to create this array because the prop mapping does not return to {} when data is inserted and removed\n    const currentlyMapped = []\n    for (let variable in mapping) {\n      if (mapping[variable].ids && mapping[variable].ids.length > 0) {\n        currentlyMapped.push(variable)\n      }\n    }\n\n    let requiredVariables = chart.dimensions.filter(\n      (d) => d.required && currentlyMapped.indexOf(d.id) === -1\n    )\n\n    if (requiredVariables.length > 0) {\n      let errorMessage = (\n        <span>\n          Required chart variables: you need to map{' '}\n          {requiredVariables\n            .map((d, i) => <span key={i} className=\"font-weight-bold\">{d.name}</span>)\n            .reduce((prev, curr) => [prev, ' and ', curr])}\n        </span>\n      )\n      setError({ variant: 'secondary', message: errorMessage })\n      setRawViz(null)\n      while (domRef.current.firstChild) {\n        domRef.current.removeChild(domRef.current.firstChild)\n      }\n      return\n    }\n\n    // control multiple required variables\n    const multivaluesVariables = chart.dimensions.filter(\n      (d) =>\n        d.multiple &&\n        d.required &&\n        d.minValues &&\n        mapping[d.id].ids.length < d.minValues\n    )\n    if (multivaluesVariables.length > 0) {\n      let errorMessage = (\n        <span>\n          Please map{' '}\n          {multivaluesVariables\n            .map((d) => (\n              <>\n                at least <span className=\"font-weight-bold\">{d.minValues}</span>{' '}\n                dimensions on <span className=\"font-weight-bold\">{d.name}</span>\n              </>\n            ))\n            .reduce((prev, curr) => [prev, ' and ', curr])}\n          .\n        </span>\n      )\n      setError({ variant: 'secondary', message: errorMessage })\n      setRawViz(null)\n      while (domRef.current.firstChild) {\n        domRef.current.removeChild(domRef.current.firstChild)\n      }\n      return\n    }\n\n    // control data-types mismatches\n    for (let variable in mapping) {\n      if (\n        mapping[variable].ids &&\n        mapping[variable].ids.length > 0 &&\n        !mapping[variable].isValid\n      ) {\n        const variableObj = chart.dimensions.find((d) => d.id === variable)\n        const errorMessage = `Data-type mismatch: you can’t map ${mapping[variable].mappedType}s on ${variableObj.name}.`\n        setError({ variant: 'danger', message: errorMessage })\n        setRawViz(null)\n        while (domRef.current.firstChild) {\n          domRef.current.removeChild(domRef.current.firstChild)\n        }\n        return\n      }\n    }\n\n    if (!mappedData) {\n      // console.info('Clearing viz')\n      setRawViz(null)\n      while (domRef.current.firstChild) {\n        domRef.current.removeChild(domRef.current.firstChild)\n      }\n      return\n    }\n    // console.info('Updating viz')\n    try {\n      const viz = rawChart(chart, {\n        data,\n        mapping: mapping,\n        dataTypes,\n        visualOptions: vizOptionsDebounced,\n      })\n      try {\n        const rawViz = viz.renderToDOM(domRef.current, mappedData)\n        setRawViz(rawViz)\n        setError(null)\n        onChartRendered(chart.metadata)\n      } catch (e) {\n        console.log(\"chart error\", e)\n        setError({ variant: 'danger', message: 'Chart error. ' + e.message })\n        setRawViz(null)\n      }\n    } catch (e) {\n      while (domRef.current.firstChild) {\n        domRef.current.removeChild(domRef.current.firstChild)\n      }\n      console.log({ e })\n      setError({ variant: 'danger', message: 'Chart error. ' + e.message })\n      setRawViz(null)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setError, vizOptionsDebounced, setRawViz, mappedData, chart, mapping])\n\n  return (\n    <div className={'col-8 col-xl-9'}>\n      <div\n        className={['overflow-auto', 'position-sticky'].join(' ')}\n        style={{ top: 'calc(15px + var(--header-height))' }}\n      >\n        {error && (\n          <WarningMessage variant={error.variant} message={error.message} />\n        )}\n        <div ref={domRef}>{/* Don't put content in this <div /> */}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default React.memo(ChartPreview)\n","import { useEffect, useState } from 'react'\n\nexport default function useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value)\n\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value)\n      }, delay)\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler)\n      }\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  )\n\n  return debouncedValue\n}\n","import React, { useState, useEffect } from 'react'\nimport { Row } from 'react-bootstrap'\nimport ChartOptions from '../ChartOptions'\nimport ChartPreview from '../ChartPreview'\nimport { chart as rawChart } from '@rawgraphs/rawgraphs-core'\nimport { mapDataInWorker } from '../../worker'\nimport { WEBWORKER_ACTIVE } from '../../constants'\n\nconst ChartPreviewWithOptions = ({\n  chart,\n  dataset,\n  dataTypes,\n  mapping,\n  visualOptions,\n  setVisualOptions,\n  setRawViz,\n  setMappingLoading,\n}) => {\n  const [error, setError] = useState({variant: \"secondary\", message: \"Required chart variables\"})\n  const [mappedData, setMappedData] = useState(null)\n\n  useEffect(() => {\n    // console.info('Updating mapped dataset')\n    try {\n      setMappingLoading(true)\n\n      if (WEBWORKER_ACTIVE) {\n        mapDataInWorker(chart.metadata.name, {\n          data: dataset,\n          mapping: mapping,\n          dataTypes,\n        })\n          .then((mappedData) => {\n            setMappingLoading(false)\n            setMappedData(mappedData)\n          })\n          .catch((err) => {\n            console.error(err)\n            setMappingLoading(false)\n            setMappedData(null)\n          })\n      } else {\n        const viz = rawChart(chart, {\n          data: dataset,\n          mapping: mapping,\n          dataTypes,\n        })\n        const vizData = viz._getVizData()\n        setMappingLoading(false)\n        setMappedData(vizData)\n      }\n    } catch (e) {\n      console.error(e)\n      setMappingLoading(false)\n      setMappedData(null)\n    }\n  }, [\n    chart,\n    mapping,\n    dataTypes,\n    setError,\n    setRawViz,\n    setMappingLoading,\n    dataset,\n  ])\n\n  return (\n    <Row>\n        <ChartOptions\n          chart={chart}\n          dataset={dataset}\n          mapping={mapping}\n          dataTypes={dataTypes}\n          visualOptions={visualOptions}\n          setVisualOptions={setVisualOptions}\n          error={error}\n          mappedData={mappedData}\n        />\n        <ChartPreview\n          chart={chart}\n          dataset={dataset}\n          dataTypes={dataTypes}\n          mapping={mapping}\n          visualOptions={visualOptions}\n          error={error}\n          setError={setError}\n          setRawViz={setRawViz}\n          mappedData={mappedData}\n        />\n    </Row>\n  )\n}\n\nexport default ChartPreviewWithOptions\n","import React, { useCallback, useState } from 'react'\nimport { InputGroup, DropdownButton, Dropdown } from 'react-bootstrap'\nimport { onChartExported } from '../../gaEvents'\n\nfunction downloadBlob(url, filename) {\n  // Create a new anchor element\n  const a = document.createElement('a')\n  a.href = url\n  a.download = filename || 'download'\n  a.click()\n  return a\n}\n\nexport default function Exporter({ rawViz, exportProject }) {\n  const downloadSvg = useCallback(\n    (filename) => {\n      var svgString = new XMLSerializer().serializeToString(\n        rawViz._node.firstChild\n      )\n      var DOMURL = window.URL || window.webkitURL || window\n      var svg = new Blob([svgString], { type: 'image/svg+xml;charset=utf-8' })\n      var url = DOMURL.createObjectURL(svg)\n      downloadBlob(url, filename)\n      DOMURL.revokeObjectURL(svg)\n    },\n    [rawViz]\n  )\n\n  const downloadImage = useCallback(\n    (format, filename) => {\n      var svgString = new XMLSerializer().serializeToString(\n        rawViz._node.firstChild\n      )\n      var DOMURL = window.URL || window.webkitURL || window\n      var svg = new Blob([svgString], { type: 'image/svg+xml;charset=utf-8' })\n      var url = DOMURL.createObjectURL(svg)\n      var canvas = document.createElement('canvas')\n      canvas.height = rawViz._node.firstChild.clientHeight\n      canvas.width = rawViz._node.firstChild.clientWidth\n      var ctx = canvas.getContext('2d')\n      var img = new Image()\n      img.onload = function () {\n        ctx.drawImage(img, 0, 0)\n        var dataUrl = canvas.toDataURL(format)\n        downloadBlob(dataUrl, filename)\n        DOMURL.revokeObjectURL(svg)\n      }\n      img.src = url\n    },\n    [rawViz]\n  )\n\n  const downloadProject = useCallback(\n    (filename) => {\n      const project = exportProject()\n      const str = JSON.stringify(project)\n      const blob = new Blob([str], { type: 'application/json' })\n      const DOMURL = window.URL || window.webkitURL || window\n      const url = DOMURL.createObjectURL(blob)\n      downloadBlob(url, filename)\n      DOMURL.revokeObjectURL(url)\n    },\n    [exportProject]\n  )\n\n  const exportFormats = ['svg', 'png', 'jpg', 'rawgraphs']\n\n  const [currentFormat, setCurrentFormat] = useState('svg')\n  const [currentFile, setCurrentFile] = useState('viz')\n\n  const downloadViz = useCallback(() => {\n    switch (currentFormat) {\n      case 'svg':\n        downloadSvg(`${currentFile}.svg`)\n        break\n      case 'png':\n        downloadImage('image/png', `${currentFile}.png`)\n        break\n      case 'jpg':\n        downloadImage('image/jpeg', `${currentFile}.jpg`)\n        break\n      case 'rawgraphs':\n        downloadProject(`${currentFile}.rawgraphs`)\n        break\n      default:\n        break\n    }\n    // TODO: Make a getter for _chartImplementation\n    onChartExported(rawViz._chartImplementation.metadata, currentFormat)\n  }, [\n    currentFile,\n    currentFormat,\n    downloadImage,\n    downloadProject,\n    downloadSvg,\n    rawViz,\n  ])\n\n  return (\n    <div className=\"row\">\n      <div className=\"col col-sm-3\">\n        <InputGroup className=\"mb-3 raw-input-group\">\n          <input\n            type=\"text\"\n            className=\"form-control text-field\"\n            value={currentFile}\n            onChange={(e) => setCurrentFile(e.target.value)}\n          ></input>\n          <DropdownButton\n            as={InputGroup.Append}\n            title={`.${currentFormat}`}\n            id=\"input-group-dropdown-1\"\n            className=\"raw-dropdown\"\n          >\n            {exportFormats.map((d) => {\n              return (\n                <Dropdown.Item key={d} onClick={() => setCurrentFormat(d)}>\n                  .{d}\n                </Dropdown.Item>\n              )\n            })}\n          </DropdownButton>\n        </InputGroup>\n      </div>\n\n      <div className=\"col col-sm-2\">\n        <button\n          className=\"btn btn-primary btn-block raw-btn\"\n          onClick={downloadViz}\n        >\n          Download\n        </button>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useCallback, useMemo, useEffect, useRef } from 'react'\nimport {\n  getOptionsConfig,\n  getDefaultOptionsValues,\n} from '@rawgraphs/rawgraphs-core'\n\nimport HeaderItems from './HeaderItems'\nimport Header from './components/Header'\nimport Section from './components/Section'\nimport Footer from './components/Footer'\nimport ScreenSizeAlert from './components/ScreenSizeAlert'\n\nimport DataLoader from './components/DataLoader'\nimport charts from './charts'\nimport ChartSelector from './components/ChartSelector'\nimport DataMapping from './components/DataMapping'\nimport ChartPreviewWithOptions from './components/ChartPreviewWIthOptions'\nimport Exporter from './components/Exporter'\nimport get from 'lodash/get'\nimport usePrevious from './hooks/usePrevious'\nimport { serializeProject } from '@rawgraphs/rawgraphs-core'\nimport useDataLoader from './hooks/useDataLoader'\nimport isPlainObject from 'lodash/isPlainObject'\nimport CookieConsent from 'react-cookie-consent'\n\n// #TODO: i18n\n\nfunction App() {\n  const dataLoader = useDataLoader()\n  const {\n    userInput,\n    userData,\n    userDataType,\n    parseError,\n    unstackedData,\n    unstackedColumns,\n    data,\n    separator,\n    thousandsSeparator,\n    decimalsSeparator,\n    locale,\n    stackDimension,\n    dataSource,\n    loading,\n    hydrateFromSavedProject,\n  } = dataLoader\n\n  /* From here on, we deal with viz state */\n  const [currentChart, setCurrentChart] = useState(null)\n  const [mapping, setMapping] = useState({})\n  const [visualOptions, setVisualOptions] = useState({})\n  const [rawViz, setRawViz] = useState(null)\n  const [mappingLoading, setMappingLoading] = useState(false)\n  const dataMappingRef = useRef(null)\n\n  const columnNames = useMemo(() => {\n    if (get(data, 'dataTypes')) {\n      return Object.keys(data.dataTypes)\n    }\n  }, [data])\n\n  const prevColumnNames = usePrevious(columnNames)\n  const clearLocalMapping = useCallback(() => {\n    if (dataMappingRef.current) {\n      dataMappingRef.current.clearLocalMapping()\n    }\n  }, [])\n\n  //resetting mapping when column names changes (ex: separator change in parsing)\n  useEffect(() => {\n    if (prevColumnNames) {\n      if (!columnNames) {\n        setMapping({})\n        clearLocalMapping()\n      } else {\n        const prevCols = prevColumnNames.join('.')\n        const currentCols = columnNames.join('.')\n        if (prevCols !== currentCols) {\n          setMapping({})\n          clearLocalMapping()\n        }\n      }\n    }\n  }, [columnNames, prevColumnNames, clearLocalMapping])\n\n  const handleChartChange = useCallback(\n    (nextChart) => {\n      setMapping({})\n      clearLocalMapping()\n      setCurrentChart(nextChart)\n      const options = getOptionsConfig(nextChart?.visualOptions)\n      setVisualOptions(getDefaultOptionsValues(options))\n      setRawViz(null)\n    },\n    [clearLocalMapping]\n  )\n\n  const exportProject = useCallback(() => {\n    return serializeProject({\n      userInput,\n      userData,\n      userDataType,\n      parseError,\n      unstackedData,\n      unstackedColumns,\n      data,\n      separator,\n      thousandsSeparator,\n      decimalsSeparator,\n      locale,\n      stackDimension,\n      dataSource,\n      currentChart,\n      mapping,\n      visualOptions,\n    })\n  }, [\n    currentChart,\n    data,\n    dataSource,\n    decimalsSeparator,\n    locale,\n    mapping,\n    parseError,\n    separator,\n    stackDimension,\n    thousandsSeparator,\n    userData,\n    userDataType,\n    userInput,\n    visualOptions,\n    unstackedColumns,\n    unstackedData,\n  ])\n\n  // project import\n  const importProject = useCallback(\n    (project) => {\n      hydrateFromSavedProject(project)\n      setCurrentChart(project.currentChart)\n      setMapping(project.mapping)\n      // adding \"annotations\" for color scale:\n      // we annotate the incoming options values (complex ones such as color scales)\n      // to le the ui know they are coming from a loaded project\n      // so we don't have to re-evaluate defaults\n      // this is due to the current implementation of the color scale\n      const patchedOptions = { ...project.visualOptions }\n      Object.keys(patchedOptions).forEach((k) => {\n        if (isPlainObject(patchedOptions[k])) {\n          patchedOptions[k].__loaded = true\n        }\n      })\n      setVisualOptions(project.visualOptions)\n    },\n    [hydrateFromSavedProject]\n  )\n\n  //setting initial chart and related options\n  useEffect(() => {\n    setCurrentChart(charts[0])\n    const options = getOptionsConfig(charts[0]?.visualOptions)\n    setVisualOptions(getDefaultOptionsValues(options))\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Header menuItems={HeaderItems} />\n      <div className=\"app-sections\">\n        <Section title={`1. Load your data`} loading={loading}>\n          <DataLoader {...dataLoader} hydrateFromProject={importProject} />\n        </Section>\n        {data && (\n          <Section title=\"2. Choose a chart\">\n            <ChartSelector\n              availableCharts={charts}\n              currentChart={currentChart}\n              setCurrentChart={handleChartChange}\n            />\n          </Section>\n        )}\n        {data && currentChart && (\n          <Section title={`3. Mapping`} loading={mappingLoading}>\n            <DataMapping\n              ref={dataMappingRef}\n              dimensions={currentChart.dimensions}\n              dataTypes={data.dataTypes}\n              mapping={mapping}\n              setMapping={setMapping}\n            />\n          </Section>\n        )}\n        {data && currentChart && (\n          <Section title=\"4. Customize\">\n            <ChartPreviewWithOptions\n              chart={currentChart}\n              dataset={data.dataset}\n              dataTypes={data.dataTypes}\n              mapping={mapping}\n              visualOptions={visualOptions}\n              setVisualOptions={setVisualOptions}\n              setRawViz={setRawViz}\n              setMappingLoading={setMappingLoading}\n            />\n          </Section>\n        )}\n        {data && currentChart && rawViz && (\n          <Section title=\"5. Export\">\n            <Exporter rawViz={rawViz} exportProject={exportProject} />\n          </Section>\n        )}\n        <Footer />\n        <CookieConsent\n          location=\"bottom\"\n          buttonText=\"Got it!\"\n          style={{ background: '#f5f5f5', color: '#646467' }}\n          buttonStyle={{\n            background: '#646467',\n            color: 'white',\n            fontSize: '13px',\n            borderRadius: '3px',\n            padding: '5px 20px',\n          }}\n          buttonClasses=\"btn btn-default btn-grey\"\n          acceptOnScroll={true}\n        >\n          This website uses Google Analytics to anonymously collect browsing\n          data.{' '}\n          <a\n            href=\"https://rawgraphs.io/privacy/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"ml-2 text-body border-bottom border-dark\"\n          >\n            Learn More\n          </a>\n        </CookieConsent>\n      </div>\n      <ScreenSizeAlert />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}